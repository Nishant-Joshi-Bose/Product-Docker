#!/usr/bin/python2.7
#
# Invoked via pts-handler to display pages related to AdaptIQ diagnostics.
#
import os
import sys
import re
import json
import datetime
import subprocess


exampleOutput = """
{
    "header": {
        "device": "",
        "resource": "/vfe/meters",
        "method": "GET",
        "msgtype": "RESPONSE",
        "reqID": 0,
        "version": 1,
        "status": 200,
        "token": ""
    },
    "body": {
        "beamLevels": [
            -79.989845,
            -73.184128,
            -79.49144,
            -73.848434,
            -77.387215,
            -77.544029,
            -79.140587,
            -74.768105,
            -79.796616,
            -76.077446,
            -78.849442,
            -73.069771
        ],
        "micLevels": [
            -59.535366,
            -59.617481,
            -62.769974,
            -58.16785,
            -61.096382,
            -64.150459,
            -60.835705,
            -63.896069
        ]
    }
}
"""


def outputTable( values, selected = None ):
    print """HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nCache-Control: no-cache\r\nRefresh: 1\r\n\r"""
    print datetime.datetime.now()
    print """
<html>
<head>
<style type="text/css">
    body {
        font-family: Verdana, Arial, Helvetica, sans-serif;
        overflow: auto;
    }
    table, th, td {
        border: 1px solid black;
    }
</style>
</head>
<body>
<table>
<tr>"""
    
    print "<th>Value Type</th>"
    for i in range(0, len(values)):
        if i == selected:
            print """<th style="background:yellow;"><a href="/diag/microphone/all">Mic {}</a></th>""".format(i+1)
        else:
            print """<th><a href="/diag/microphone/{}">Mic {}</a></th>""".format(i,i+1)
    print "</tr>"

    if not selected is None:
        print "<tr>"
        print "<td>Offset Values</td>"
        for i in range(0, len(values)):
            print """<td>{}</td>""".format((values[i]-values[selected]))
        print "</tr>"

    print "<tr>"
    print "<td>Real Values</td>"
    for i in range(0, len(values)):
        print """<td>{}</td>""".format(values[i])
    print "</tr>"

    print """
</table>
</body>
</html>"""


#if "get" or "put" argument specified, perform corresponding action on FrontDoor
if len(sys.argv) > 1:
    message = exampleOutput #subprocess.Popen(["frontdoorutil","/vfe"],stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()[0] 

    try:
        data = json.loads(message)
        mics = data['body']['micLevels']
        beams = data['body']['beamLevels']
        raw = json.dumps(data['body'],indent=4)

    except ValueError:
        print message+"\n"
        sys.exit()

    #if "raw" argument, being asked for raw data. 
    if sys.argv[1]=="raw":
        print """HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\nCache-Control: no-cache\r\n\r"""
        print raw


    #if "get" argument, perform get request and output as text, using "Refresh" option to continously poll
    elif sys.argv[1].isdigit():
        outputTable(mics, int(sys.argv[1]))

    else:
        outputTable(mics)

else:
    print """
<!DOCTYPE HTML>
<html>
    <head>
        <meta charset="utf-8">
        <title>Microphone Diagnostics</title>
        <style type="text/css">
            body {
                font-family: Verdana, Arial, Helvetica, sans-serif;
                overflow: auto;
            }
            hr {
                border: 1px solid blue;
                color: #fff;
                background-color: #fff;
                height: 1px;
                width: 100%;
            }
            iframe {
                background-color: lightgrey;
                white-space: pre-wrap;
                border: thin dotted;
                position:relative;
                height: 10em;
                width: 98%;
                margin: 1%;
                padding 1em;
                display: block;
                overflow: scroll;
            }
        </style>
        <script>
            if urlParams.has('selected')
            {
                document.getElementById('values').setAttribute('src','/diag/microphone/'+urlParams.get('selected'));
            }
        </script>
    </head>

    <body>
        <h1 id='header'>Microphones</h1>
        <hr>
        <li>Microphone Values
        <iframe id="values" src="/diag/microphone/all"></iframe>   <!-- inline frame pulls from "get" portion of CGI script, while button fetches "pull" request -->
        <hr>
    </body>
</html>
"""