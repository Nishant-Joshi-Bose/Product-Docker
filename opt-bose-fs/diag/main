#!/usr/bin/python2.7
#
# Invoked via pts-handler to display pages related to diagnostics.
#
import os
import sys
import re
import json

if len(sys.argv) != 1:
    raise Exception("wrong usage " + str(sys.argv))

def html_escape(text):
    return re.sub(r'[<&>]', lambda x: { "<": "&lt;",
                                        "&": "&amp;",
                                        ">": "&gt;" }[x.group(0)], text)

print """\
HTTP/1.1 200 OK\r
Content-Type: text/html\r
Cache-Control: no-cache\r
\r"""

print """
<html>
<head>
<title>Diagnostics</title>
<style type="text/css">
 body {
   font-family: Verdana, Arial, Helvetica, sans-serif;
 }
 hr {
   border: 1px solid blue;
   color: #fff;
   background-color: #fff;
   height: 1px;
   width: 100%;
 }
 div.box {
   background-color: lightgrey;
   border: thin dotted;
   padding: 1em;
   margin: 1em;
 }
 td.showimg {
   padding: 8px;
 }
 .hilite {
   background-color: yellow;
 }
</style>
</head>
<body>
<h1>Diagnostics</h1>
<hr>
"""

version_info = json.load(open("/opt/Bose/etc/BoseVersion.json"))
print "<li>Software Version"
print """<div class="box">"""
print html_escape(version_info["long"])
print "</div>"

print "<li>Manufacturing Data [<a href='/diag/mfg-data'>all</a>]"
mfg_data = json.load(open("/persist/mfg_data.json"))
print """<div class="box">"""
print "<table>"

elem = "development"
dev = mfg_data.get(elem)
if dev is not None:
    print """<tr class="hilite"><td>{}</td><td>{}</td></tr>""" \
        .format(elem, html_escape(dev))

for elem in """country_code regionCode snSystem productType productName
               productColor testflagLaunchAssurance""".split():
    print "<tr><td>{}</td><td>{}</td></tr>" \
        .format(elem, html_escape(mfg_data.get(elem, "(none)")))
print "</table>"
print "</div>"

print "<li>Tests"
print """<div class="box">"""
print "<a href='/diag/accessories'>Accessory Pairing</a> <br>"
print "<a href='/diag/adaptIQ'>AdaptIQ</a> <br>"
print "<a href='/diag/microphone'>Microphones</a>"
print "</div>"

print "<hr>"

print "Remote:", os.environ.get("REMOTE_ADDRESS", "(oops)"), "via", os.environ.get("IFACE", "(oops)")

print """
</body>
</html>
"""
