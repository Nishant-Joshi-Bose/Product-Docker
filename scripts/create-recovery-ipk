#!/bin/bash
#
# Create an IPK file for installing minimal SoundTouch image for recovery.
#
# To install:
#   opkg install recovery.ipk
#
# To uninstall:
#   opkg remove recovery
#
this=${0##*/} # this script's name

cfg=Release

tryhelp () {
    echo >&2 "Try '$this --help' for more information."
    exit 1
}
opts=$(getopt --name "$this" --shell sh \
    -o uh \
    -l "help" \
    -- "$@") || tryhelp
eval set -- "$opts"
while :; do
    arg="$1"; shift
    case "$arg" in
	(--help | -h)
	    cat <<EOF
Usage: $this [options]

Create an IPK file for installing minimal SoundTouch image for recovery.

Options:
EOF
	    exit 0
	    ;;

	(--) break ;;
	(*)  echo >&2 "$this: internal error at '$arg'"; exit 1 ;;
    esac
done

if (( $# != 0 )); then
    echo >&2 "$this: unexpected argument '$1'"
    tryhelp
fi

function put_script {
    local file="$1"; shift
    cat "$@" >"$file" || exit
    chmod 755 "$file" || exit
}

here=$(cd "$(dirname $0)" && echo "$PWD") || exit
wspace=$(cd "$here/.." && echo "$PWD") || exit

riviera_toolchain_dir=$(components get Riviera-Toolchain installed_location) || exit
swup_dir=$(components get SoftwareUpdate-qc8017_32 installed_location) || exit

sysroot=$riviera_toolchain_dir/sdk/sysroots/$(uname -m)-oesdk-linux
tool_prefix=$sysroot/usr/bin/arm-oemllib32-linux/arm-oemllib32-linux-
tool64_prefix=$sysroot/usr/bin/aarch64-oe-linux/aarch64-oe-linux-

stage=$wspace/builds/$cfg/recovery-ipk-stage
rm -rf "$stage"
echo "Stage directory $stage"

output_dir=$wspace/builds/$cfg
opt_dir=$stage/Bose
mkdir -p "$output_dir" "$opt_dir/etc" "$opt_dir/bin" || exit

components record "$stage" || exit

# copy minimal image tar to /opt/Bose
minimal_image="Bose_minimal.tar.gz"
cp "$wspace/builds/$cfg/$minimal_image"  "$opt_dir/" || exit

# copy network configured script which will be required in restore operation
cp "$wspace/misc/isNetworkConfigured" "$opt_dir/bin/" || exit

# copy recovery images from Software Update
"$swup_dir/stage_recovery" "$opt_dir" || exit

PackageName=SoundTouchRecovery

version_json=$wspace/builds/$cfg/qc8017_32/BoseVersion.json
package_version=$(make-version-string "$version_json" "{major}.{minor}.{patch}.{build_number}+{abbrev_commit}") || exit
echo "Package version \"$package_version\""

cat >"$stage/control" <<EOF || exit
Package: $PackageName
Version: $package_version
Description: SoundTouch recovery version $package_version
 The SoundTouch recovery app
Section: soundtouch
Priority: optional
License: Commercial
Architecture: armv7a-vfp-neon
OE: soundtouch
Homepage: http://www.bose.com/
#Depends: libc6 (>= 2.21)
Source: None
EOF

# Installer scripts
put_script "$stage/postinst" <<EOF
#!/bin/sh
echo "SoundTouch recovery postinst"

# move minimal rpoduct image to cache partition
mv /opt/Bose/Bose_minimal.tar.gz /cache/

# move RecoveryMain binary to /cache partition
mv /opt/Bose/bin/RecoveryMain /cache/

# todo: once HSP team changes path replace cp with mv
cp /opt/Bose/etc/RecoveryMgr /cache/

# move network check script to /cache
cp /opt/Bose/bin/isNetworkConfigured /cache/ 
EOF

put_script "$stage/postrm" <<EOF
#!/bin/sh
echo "SoundTouch recovery postrm"
EOF

put_script "$stage/preinst" <<EOF
#!/bin/sh
echo "SoundTouch recovery preinst"
EOF

put_script "$stage/prerm" <<EOF
#!/bin/sh
echo "SoundTouch recovery prerm"
EOF

# Our standard CentOS configuration has
# LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib which causes
# ${tool64_prefix}strip to segfault.  As a workaround, unset LD_LIBRARY_PATH
# here and hope it wasn't actually needed for anything else this script does.
if [ "$LD_LIBRARY_PATH" ]; then
    echo "$this: unsetting LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
    unset LD_LIBRARY_PATH
fi

for i in "$stage"/Bose/{lib,bin}/*; do
    type=$(file --brief "$i") || exit
    case "$type" in
        (*", stripped")
            echo >&2 "$this: (warning) No debug symbols: $i"
            ;;
        (*", ARM aarch64, "*", not stripped" | *" 64-bit "*", not stripped")
            # `strip` fails without an error message if the file is empty
            if ! "${tool64_prefix}strip" "$i"; then
                echo >&2 "$this: Failed to strip $i"
                exit 1
            fi
            ;;
        (*", not stripped")
            # `strip` fails without an error message if the file is empty
            if ! "${tool_prefix}strip" "$i"; then
                echo >&2 "$this: Failed to strip $i"
                exit 1
            fi
            ;;
    esac
done
# -----------------------------------------------------------------------------
# Stage area is complete.  Package it into a *.ipk file.

cd "$stage" || exit
tar --owner=0 --group=0 -czf control.tar.gz control pre* post* || exit
tar --owner=0 --group=0 -czf data.tar.gz -C "$opt_dir" . || exit
echo "2.0" > debian-binary || exit

ipk=$output_dir/recovery.ipk
rm -f "$ipk"
ar -crf "$ipk" control.tar.gz data.tar.gz debian-binary || exit
echo "Created $ipk"
