#!/bin/bash
#
# Strip symbols from executables.
# Optionally save a copy of the unstripped executables for later debugging.
#

unstripped_dir=
if [[ $1 = --save=* ]]; then
    unstripped_dir=${1#*=}
    shift
fi

if (( $# == 0 )); then
    echo >&2 "usage: ${0##*/} [--save=unstripped-dir] files..."
    exit 1
fi

if [ "$unstripped_dir" ]; then
    mkdir -p "$unstripped_dir" || exit
fi

riviera_toolchain_dir=$(components get Riviera-Toolchain installed_location) || exit
sysroot=$riviera_toolchain_dir/sdk/sysroots/$(uname -m)-oesdk-linux
tool_prefix=$sysroot/usr/bin/arm-oemllib32-linux/arm-oemllib32-linux-
tool64_prefix=$sysroot/usr/bin/aarch64-oe-linux/aarch64-oe-linux-

# Our standard CentOS configuration has
# LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib which causes
# ${tool64_prefix}strip to segfault.  As a workaround, unset LD_LIBRARY_PATH
# here and hope it wasn't actually needed for anything else this script does.
if [ "$LD_LIBRARY_PATH" ]; then
    echo >&2 "$this: unsetting LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
    unset LD_LIBRARY_PATH
fi

for i; do
    type=$(file --brief "$i") || exit
    case "$type" in
        (*", stripped")
            #echo >&2 "$this: (warning) No debug symbols: $i"
            ;;
        (*", ARM aarch64, "*", not stripped" | *" 64-bit "*", not stripped")
            if [ "$unstripped_dir" ]; then
                cp "$i" "$unstripped_dir" || exit
            fi
            # `strip` fails without an error message if the file is empty
            if ! "${tool64_prefix}strip" "$i"; then
                echo >&2 "$this: Failed to strip $i"
                exit 1
            fi
            ;;
        (*", not stripped")
            if [ "$unstripped_dir" ]; then
                cp "$i" "$unstripped_dir" || exit
            fi
            # `strip` fails without an error message if the file is empty
            if ! "${tool_prefix}strip" "$i"; then
                echo >&2 "$this: Failed to strip $i"
                exit 1
            fi
            ;;
    esac
done

exit 0
