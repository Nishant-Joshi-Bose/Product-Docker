ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_CSDPostSingleScan
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_CSDPostSingleScan, %function
  23              	CapSense_CSDPostSingleScan:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 3.10
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the CapSense component
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense P4 v3.10 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 2


  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** 
  44:Generated_Source\PSoC4/CapSense_INT.c **** 
  45:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  46:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  47:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  48:Generated_Source\PSoC4/CapSense_INT.c **** /**
  49:Generated_Source\PSoC4/CapSense_INT.c **** * \if SECTION_CAPSENSE_INTERNAL
  50:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_capsense_internal
  51:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  52:Generated_Source\PSoC4/CapSense_INT.c **** */
  53:Generated_Source\PSoC4/CapSense_INT.c **** 
  54:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  55:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  56:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  57:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  58:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  59:Generated_Source\PSoC4/CapSense_INT.c **** 
  60:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  61:Generated_Source\PSoC4/CapSense_INT.c ****     CY_INLINE static void CapSense_SsCSDPostScan(void);
  62:Generated_Source\PSoC4/CapSense_INT.c ****     CY_INLINE static void CapSense_SsCSDInitNextScan(void);
  63:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */ 
  64:Generated_Source\PSoC4/CapSense_INT.c **** 
  65:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD2X_EN)
  66:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
  67:Generated_Source\PSoC4/CapSense_INT.c ****         CY_INLINE static void CapSense_SsCSD2XCheckNextScan(void);
  68:Generated_Source\PSoC4/CapSense_INT.c ****         static void CapSense_SsCSD2XNextFrequencyScan(void);
  69:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
  70:Generated_Source\PSoC4/CapSense_INT.c ****     CY_INLINE static void CapSense_SsCSD2XInitNextScan(void);
  71:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD2X_EN) */
  72:Generated_Source\PSoC4/CapSense_INT.c **** 
  73:Generated_Source\PSoC4/CapSense_INT.c ****    
  74:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \endif */
  76:Generated_Source\PSoC4/CapSense_INT.c **** 
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** /**
  79:Generated_Source\PSoC4/CapSense_INT.c **** * \if SECTION_CAPSENSE_INTERRUPT
  80:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_capsense_interrupt
  81:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  82:Generated_Source\PSoC4/CapSense_INT.c **** */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c **** 
  85:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  86:Generated_Source\PSoC4/CapSense_INT.c **** 
  87:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  88:Generated_Source\PSoC4/CapSense_INT.c ****     /*  CSDv2 HW IP block part */
  89:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 3


  90:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
  91:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  92:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *
  94:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for single-sensor scanning implementation.
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *
  97:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv1 HW IP block:
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv2 HW IP block:
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes IMO and initializes scanning for the next frequency
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *
 121:Generated_Source\PSoC4/CapSense_INT.c **** 	*  This function has two Macro Callbacks that allow calling the user code
 122:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in a component's generated code. Refer to the 
 123:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 124:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details. 
 125:Generated_Source\PSoC4/CapSense_INT.c ****     *
 126:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 127:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 128:Generated_Source\PSoC4/CapSense_INT.c ****     {
  26              		.loc 1 128 0
  27              		.cfi_startproc
 129:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 130:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 131:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 132:Generated_Source\PSoC4/CapSense_INT.c **** 
 133:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 134:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
  28              		.loc 1 134 0
  29 0000 8322     		mov	r2, #131
  30 0002 5200     		lsl	r2, r2, #1
  31 0004 134B     		ldr	r3, .L4
  32 0006 1A60     		str	r2, [r3]
  33              	.LBB4:
  34              	.LBB5:
 135:Generated_Source\PSoC4/CapSense_INT.c **** 
 136:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 137:Generated_Source\PSoC4/CapSense_INT.c ****         if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 4


 138:Generated_Source\PSoC4/CapSense_INT.c ****                                                     CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 139:Generated_Source\PSoC4/CapSense_INT.c ****                                                     CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 140:Generated_Source\PSoC4/CapSense_INT.c ****                                                     (0u < CapSense_badConversionsNum))
 141:Generated_Source\PSoC4/CapSense_INT.c ****         {
 142:Generated_Source\PSoC4/CapSense_INT.c ****             /* Decrement bad conversions number */
 143:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum--;
 144:Generated_Source\PSoC4/CapSense_INT.c **** 
 145:Generated_Source\PSoC4/CapSense_INT.c ****             /* Start the re-scan */
 146:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 147:Generated_Source\PSoC4/CapSense_INT.c ****                                                          CapSense_SEQ_START_AZ1_SKIP_MASK |
 148:Generated_Source\PSoC4/CapSense_INT.c ****                                                          CapSense_SEQ_START_START_MASK);
 149:Generated_Source\PSoC4/CapSense_INT.c ****         }
 150:Generated_Source\PSoC4/CapSense_INT.c ****         else
 151:Generated_Source\PSoC4/CapSense_INT.c ****         {
 152:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 153:Generated_Source\PSoC4/CapSense_INT.c **** 
 154:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 155:Generated_Source\PSoC4/CapSense_INT.c **** 
 156:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 158:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 160:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 161:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 162:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 163:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 164:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 166:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 167:Generated_Source\PSoC4/CapSense_INT.c **** 
 168:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         /*  Disable CSDv2 block */
 170:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 171:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 172:Generated_Source\PSoC4/CapSense_INT.c **** 
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 174:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 175:Generated_Source\PSoC4/CapSense_INT.c **** 
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 177:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 178:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 179:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 180:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 181:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         /*  Disable CSDv2 block */
 183:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 184:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 185:Generated_Source\PSoC4/CapSense_INT.c **** 
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 187:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 188:Generated_Source\PSoC4/CapSense_INT.c **** 
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 190:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 191:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 192:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 193:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 194:Generated_Source\PSoC4/CapSense_INT.c ****         }
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 5


 195:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 196:Generated_Source\PSoC4/CapSense_INT.c **** 
 197:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 198:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 199:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 200:Generated_Source\PSoC4/CapSense_INT.c ****     }
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_INT.c **** 
 203:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 204:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 205:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 206:Generated_Source\PSoC4/CapSense_INT.c ****     *
 207:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 210:Generated_Source\PSoC4/CapSense_INT.c ****     *
 211:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the 
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *
 237:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 238:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 239:Generated_Source\PSoC4/CapSense_INT.c ****     {
 240:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 241:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 243:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 244:Generated_Source\PSoC4/CapSense_INT.c **** 
 245:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 246:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 247:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 248:Generated_Source\PSoC4/CapSense_INT.c **** 
 249:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 250:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 251:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 6


 252:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 253:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 256:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 257:Generated_Source\PSoC4/CapSense_INT.c ****             {
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 259:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 260:Generated_Source\PSoC4/CapSense_INT.c **** 
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 262:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 264:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 265:Generated_Source\PSoC4/CapSense_INT.c ****             }
 266:Generated_Source\PSoC4/CapSense_INT.c ****             else
 267:Generated_Source\PSoC4/CapSense_INT.c ****             {
 268:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 269:Generated_Source\PSoC4/CapSense_INT.c **** 
 270:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 271:Generated_Source\PSoC4/CapSense_INT.c **** 
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor when all frequency channels are scanned */
 274:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 275:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 279:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 280:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 282:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 283:Generated_Source\PSoC4/CapSense_INT.c **** 
 284:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 287:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 288:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 289:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 290:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 291:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 292:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 294:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c **** 
 296:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 297:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 298:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 299:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 300:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 302:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 303:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 304:Generated_Source\PSoC4/CapSense_INT.c ****             }
 305:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 306:Generated_Source\PSoC4/CapSense_INT.c **** 
 307:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 308:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 7


 309:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 310:Generated_Source\PSoC4/CapSense_INT.c ****     }
 311:Generated_Source\PSoC4/CapSense_INT.c **** 
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 314:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 315:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 316:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 317:Generated_Source\PSoC4/CapSense_INT.c ****     *
 318:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 319:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *
 322:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 323:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has 
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next 
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 351:Generated_Source\PSoC4/CapSense_INT.c ****     {
 352:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 353:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 354:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 355:Generated_Source\PSoC4/CapSense_INT.c **** 
 356:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 357:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 358:Generated_Source\PSoC4/CapSense_INT.c **** 
 359:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 360:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 361:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 364:Generated_Source\PSoC4/CapSense_INT.c ****             {
 365:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 8


 366:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 367:Generated_Source\PSoC4/CapSense_INT.c **** 
 368:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 370:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 372:Generated_Source\PSoC4/CapSense_INT.c ****             }
 373:Generated_Source\PSoC4/CapSense_INT.c ****             else
 374:Generated_Source\PSoC4/CapSense_INT.c ****             {
 375:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 376:Generated_Source\PSoC4/CapSense_INT.c **** 
 377:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 378:Generated_Source\PSoC4/CapSense_INT.c **** 
 379:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 380:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 382:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_s
 383:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 384:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 385:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 386:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 387:Generated_Source\PSoC4/CapSense_INT.c **** 
 388:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 390:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 391:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 392:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 395:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 397:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 399:Generated_Source\PSoC4/CapSense_INT.c **** 
 400:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 401:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 402:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 403:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 404:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 407:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 408:Generated_Source\PSoC4/CapSense_INT.c ****             }
 409:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 410:Generated_Source\PSoC4/CapSense_INT.c **** 
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 412:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 414:Generated_Source\PSoC4/CapSense_INT.c ****     }
 415:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 416:Generated_Source\PSoC4/CapSense_INT.c **** 
 417:Generated_Source\PSoC4/CapSense_INT.c **** #else
 418:Generated_Source\PSoC4/CapSense_INT.c ****     /* CSDv1 part */
 419:Generated_Source\PSoC4/CapSense_INT.c **** 
 420:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 421:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 422:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 9


 423:Generated_Source\PSoC4/CapSense_INT.c ****     *
 424:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 425:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for single-sensor scanning implementation.
 426:Generated_Source\PSoC4/CapSense_INT.c ****     *
 427:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 429:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 430:Generated_Source\PSoC4/CapSense_INT.c ****     *
 431:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv1 HW IP block:
 432:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 433:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv2 HW IP block:
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes IMO and initializes scanning for the next frequency
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *
 451:Generated_Source\PSoC4/CapSense_INT.c **** 	*  This function has two Macro Callbacks that allow calling the user code
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in a component's generated code. Refer to the 
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details. 
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 457:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 458:Generated_Source\PSoC4/CapSense_INT.c ****     {
 459:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 460:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 461:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 462:Generated_Source\PSoC4/CapSense_INT.c **** 
 463:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 464:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 465:Generated_Source\PSoC4/CapSense_INT.c **** 
 466:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 467:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 468:Generated_Source\PSoC4/CapSense_INT.c **** 
 469:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 470:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 471:Generated_Source\PSoC4/CapSense_INT.c ****             {
 472:Generated_Source\PSoC4/CapSense_INT.c ****                 /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 473:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
 474:Generated_Source\PSoC4/CapSense_INT.c **** 
 475:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 476:Generated_Source\PSoC4/CapSense_INT.c ****             }
 477:Generated_Source\PSoC4/CapSense_INT.c ****             else
 478:Generated_Source\PSoC4/CapSense_INT.c ****             {
 479:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 10


 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 481:Generated_Source\PSoC4/CapSense_INT.c **** 
 482:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 483:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable CSDv1 block. Connect Vref Buffer to AMUX bus */
 484:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 485:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 486:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 488:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&
 490:Generated_Source\PSoC4/CapSense_INT.c ****                                (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 491:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 492:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 494:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 495:Generated_Source\PSoC4/CapSense_INT.c **** 
 496:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 497:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 498:Generated_Source\PSoC4/CapSense_INT.c **** 
 499:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 501:Generated_Source\PSoC4/CapSense_INT.c ****             }
 502:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 503:Generated_Source\PSoC4/CapSense_INT.c ****             {
 504:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 505:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable CSDv1 block. Connect Vref Buffer to AMUX bus */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 507:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 508:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 509:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 510:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 511:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&
 512:Generated_Source\PSoC4/CapSense_INT.c ****                                (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 516:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 517:Generated_Source\PSoC4/CapSense_INT.c **** 
 518:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 519:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 520:Generated_Source\PSoC4/CapSense_INT.c **** 
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 522:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 523:Generated_Source\PSoC4/CapSense_INT.c ****             }
 524:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 527:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 528:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 529:Generated_Source\PSoC4/CapSense_INT.c ****     }
 530:Generated_Source\PSoC4/CapSense_INT.c **** 
 531:Generated_Source\PSoC4/CapSense_INT.c **** 
 532:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 533:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 534:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 535:Generated_Source\PSoC4/CapSense_INT.c ****     *
 536:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 11


 537:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 538:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 539:Generated_Source\PSoC4/CapSense_INT.c ****     *
 540:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 541:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 542:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *  
 544:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 545:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 547:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 548:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the 
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 567:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 568:Generated_Source\PSoC4/CapSense_INT.c ****     {
 569:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 570:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 571:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 572:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 573:Generated_Source\PSoC4/CapSense_INT.c **** 
 574:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 575:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 576:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 577:Generated_Source\PSoC4/CapSense_INT.c **** 
 578:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 579:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 580:Generated_Source\PSoC4/CapSense_INT.c **** 
 581:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 582:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 583:Generated_Source\PSoC4/CapSense_INT.c **** 
 584:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Connect Vref Buffer to AMUX bus */
 585:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 586:Generated_Source\PSoC4/CapSense_INT.c **** 
 587:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 588:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 589:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 590:Generated_Source\PSoC4/CapSense_INT.c ****             {
 591:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 592:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 593:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 12


 594:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 595:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 596:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 597:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 598:Generated_Source\PSoC4/CapSense_INT.c **** 
 599:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 600:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 601:Generated_Source\PSoC4/CapSense_INT.c ****             {
 602:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 603:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 604:Generated_Source\PSoC4/CapSense_INT.c ****             }
 605:Generated_Source\PSoC4/CapSense_INT.c ****             else
 606:Generated_Source\PSoC4/CapSense_INT.c ****             {
 607:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 608:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 609:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 610:Generated_Source\PSoC4/CapSense_INT.c **** 
 611:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 612:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 613:Generated_Source\PSoC4/CapSense_INT.c ****             }
 614:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 615:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 616:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 617:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 618:Generated_Source\PSoC4/CapSense_INT.c **** 
 619:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 620:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 621:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 622:Generated_Source\PSoC4/CapSense_INT.c ****     }
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c **** 
 625:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 626:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 627:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 628:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 629:Generated_Source\PSoC4/CapSense_INT.c ****     *
 630:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 631:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 632:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 633:Generated_Source\PSoC4/CapSense_INT.c ****     *
 634:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 635:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 636:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 637:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 638:Generated_Source\PSoC4/CapSense_INT.c ****     *
 639:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 640:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 641:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 643:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 647:Generated_Source\PSoC4/CapSense_INT.c ****     *
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 13


 651:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has 
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next 
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 659:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
 661:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 662:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 663:Generated_Source\PSoC4/CapSense_INT.c ****     {
 664:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 665:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 666:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 667:Generated_Source\PSoC4/CapSense_INT.c **** 
 668:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 669:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 670:Generated_Source\PSoC4/CapSense_INT.c **** 
 671:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 672:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 673:Generated_Source\PSoC4/CapSense_INT.c **** 
 674:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Connect Vref Buffer to AMUX bus */
 675:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 676:Generated_Source\PSoC4/CapSense_INT.c **** 
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 678:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 679:Generated_Source\PSoC4/CapSense_INT.c ****             {
 680:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 681:Generated_Source\PSoC4/CapSense_INT.c ****             }
 682:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 683:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 684:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 685:Generated_Source\PSoC4/CapSense_INT.c **** 
 686:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 687:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 688:Generated_Source\PSoC4/CapSense_INT.c ****             {
 689:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 690:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 691:Generated_Source\PSoC4/CapSense_INT.c ****             }
 692:Generated_Source\PSoC4/CapSense_INT.c ****             else
 693:Generated_Source\PSoC4/CapSense_INT.c ****             {
 694:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 695:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 696:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 697:Generated_Source\PSoC4/CapSense_INT.c **** 
 698:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 699:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 700:Generated_Source\PSoC4/CapSense_INT.c ****             }
 701:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 702:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 703:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 705:Generated_Source\PSoC4/CapSense_INT.c **** 
 706:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 707:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 14


 708:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 709:Generated_Source\PSoC4/CapSense_INT.c ****     }
 710:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 711:Generated_Source\PSoC4/CapSense_INT.c **** 
 712:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 713:Generated_Source\PSoC4/CapSense_INT.c **** 
 714:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
 716:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 717:Generated_Source\PSoC4/CapSense_INT.c ****  * \endif */
 718:Generated_Source\PSoC4/CapSense_INT.c **** 
 719:Generated_Source\PSoC4/CapSense_INT.c **** 
 720:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 721:Generated_Source\PSoC4/CapSense_INT.c **** 
 722:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 723:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 724:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 725:Generated_Source\PSoC4/CapSense_INT.c **** *
 726:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 727:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 728:Generated_Source\PSoC4/CapSense_INT.c **** *
 729:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 730:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 731:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 732:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 733:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 734:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 735:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 736:Generated_Source\PSoC4/CapSense_INT.c **** *
 737:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 738:Generated_Source\PSoC4/CapSense_INT.c **** CY_INLINE static void CapSense_SsCSDPostScan(void)
 739:Generated_Source\PSoC4/CapSense_INT.c **** {
 740:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 741:Generated_Source\PSoC4/CapSense_INT.c **** 
 742:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 743:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 744:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 745:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  35              		.loc 1 745 0
  36 0008 134B     		ldr	r3, .L4+4
  37 000a 1B78     		ldrb	r3, [r3]
 744:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  38              		.loc 1 744 0
  39 000c 5B01     		lsl	r3, r3, #5
  40 000e 134A     		ldr	r2, .L4+8
  41 0010 D318     		add	r3, r2, r3
  42 0012 5B68     		ldr	r3, [r3, #4]
  43              	.LVL0:
 746:Generated_Source\PSoC4/CapSense_INT.c **** 
 747:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 748:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
  44              		.loc 1 748 0
  45 0014 124A     		ldr	r2, .L4+12
  46 0016 1268     		ldr	r2, [r2]
  47 0018 1204     		lsl	r2, r2, #16
  48 001a 120C     		lsr	r2, r2, #16
  49              	.LVL1:
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 15


 749:Generated_Source\PSoC4/CapSense_INT.c **** 
 750:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  50              		.loc 1 750 0
  51 001c 1988     		ldrh	r1, [r3]
  52 001e 0123     		mov	r3, #1
  53              	.LVL2:
  54 0020 8B40     		lsl	r3, r3, r1
  55 0022 013B     		sub	r3, r3, #1
  56              	.LVL3:
 751:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
  57              		.loc 1 751 0
  58 0024 9A42     		cmp	r2, r3
  59 0026 06D2     		bcs	.L2
 752:Generated_Source\PSoC4/CapSense_INT.c ****         {
 753:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
  60              		.loc 1 753 0
  61 0028 0E4B     		ldr	r3, .L4+16
  62              	.LVL4:
  63 002a 1968     		ldr	r1, [r3]
  64              	.LVL5:
  65 002c 0E4B     		ldr	r3, .L4+20
  66 002e 1B78     		ldrb	r3, [r3]
  67 0030 5B00     		lsl	r3, r3, #1
  68 0032 CA52     		strh	r2, [r1, r3]
  69 0034 05E0     		b	.L3
  70              	.LVL6:
  71              	.L2:
 754:Generated_Source\PSoC4/CapSense_INT.c ****         }
 755:Generated_Source\PSoC4/CapSense_INT.c ****         else
 756:Generated_Source\PSoC4/CapSense_INT.c ****         {
 757:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
  72              		.loc 1 757 0
  73 0036 0B4A     		ldr	r2, .L4+16
  74              	.LVL7:
  75 0038 1168     		ldr	r1, [r2]
  76 003a 0B4A     		ldr	r2, .L4+20
  77 003c 1278     		ldrb	r2, [r2]
  78 003e 5200     		lsl	r2, r2, #1
  79 0040 8B52     		strh	r3, [r1, r2]
  80              	.LVL8:
  81              	.L3:
  82              	.LBE5:
  83              	.LBE4:
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
  84              		.loc 1 187 0
  85 0042 0A4B     		ldr	r3, .L4+24
  86 0044 DA88     		ldrh	r2, [r3, #6]
  87 0046 0132     		add	r2, r2, #1
  88 0048 DA80     		strh	r2, [r3, #6]
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
  89              		.loc 1 190 0
  90 004a 094A     		ldr	r2, .L4+28
  91 004c 9968     		ldr	r1, [r3, #8]
  92 004e 0A40     		and	r2, r1
  93 0050 9A60     		str	r2, [r3, #8]
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
  94              		.loc 1 200 0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 16


  95              		@ sp needed
  96 0052 7047     		bx	lr
  97              	.L5:
  98              		.align	2
  99              	.L4:
 100 0054 F0000B40 		.word	1074462960
 101 0058 00000000 		.word	CapSense_widgetIndex
 102 005c 00000000 		.word	CapSense_dsFlash
 103 0060 D0000B40 		.word	1074462928
 104 0064 00000000 		.word	CapSense_curRamSnsPtr
 105 0068 00000000 		.word	CapSense_scanFreqIndex
 106 006c 00000000 		.word	CapSense_dsRam
 107 0070 7FFFFEFF 		.word	-65665
 108              		.cfi_endproc
 109              	.LFE1:
 110              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
 111              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
 112              		.align	2
 113              		.global	CapSense_CSDPostMultiScan
 114              		.code	16
 115              		.thumb_func
 116              		.type	CapSense_CSDPostMultiScan, %function
 117              	CapSense_CSDPostMultiScan:
 118              	.LFB2:
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 119              		.loc 1 239 0
 120              		.cfi_startproc
 121 0000 38B5     		push	{r3, r4, r5, lr}
 122              		.cfi_def_cfa_offset 16
 123              		.cfi_offset 3, -16
 124              		.cfi_offset 4, -12
 125              		.cfi_offset 5, -8
 126              		.cfi_offset 14, -4
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 127              		.loc 1 241 0
 128 0002 374B     		ldr	r3, .L12
 129 0004 1A78     		ldrb	r2, [r3]
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 130              		.loc 1 242 0
 131 0006 374C     		ldr	r4, .L12+4
 132 0008 5201     		lsl	r2, r2, #5
 133 000a 1059     		ldr	r0, [r2, r4]
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 134              		.loc 1 243 0
 135 000c 364A     		ldr	r2, .L12+8
 136 000e 1578     		ldrb	r5, [r2]
 137 0010 E900     		lsl	r1, r5, #3
 138 0012 4A1B     		sub	r2, r1, r5
 139 0014 9200     		lsl	r2, r2, #2
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 140              		.loc 1 241 0
 141 0016 8018     		add	r0, r0, r2
 142              	.LVL9:
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 143              		.loc 1 250 0
 144 0018 8321     		mov	r1, #131
 145 001a 4900     		lsl	r1, r1, #1
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 17


 146 001c 334A     		ldr	r2, .L12+12
 147 001e 1160     		str	r1, [r2]
 148              	.LBB10:
 149              	.LBB11:
 745:Generated_Source\PSoC4/CapSense_INT.c **** 
 150              		.loc 1 745 0
 151 0020 1B78     		ldrb	r3, [r3]
 744:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
 152              		.loc 1 744 0
 153 0022 5B01     		lsl	r3, r3, #5
 154 0024 E318     		add	r3, r4, r3
 155 0026 5B68     		ldr	r3, [r3, #4]
 156              	.LVL10:
 748:Generated_Source\PSoC4/CapSense_INT.c **** 
 157              		.loc 1 748 0
 158 0028 314A     		ldr	r2, .L12+16
 159 002a 1268     		ldr	r2, [r2]
 160 002c 1204     		lsl	r2, r2, #16
 161 002e 120C     		lsr	r2, r2, #16
 162              	.LVL11:
 750:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
 163              		.loc 1 750 0
 164 0030 1988     		ldrh	r1, [r3]
 165 0032 0123     		mov	r3, #1
 166              	.LVL12:
 167 0034 8B40     		lsl	r3, r3, r1
 168 0036 013B     		sub	r3, r3, #1
 169              	.LVL13:
 751:Generated_Source\PSoC4/CapSense_INT.c ****         {
 170              		.loc 1 751 0
 171 0038 9A42     		cmp	r2, r3
 172 003a 06D2     		bcs	.L7
 753:Generated_Source\PSoC4/CapSense_INT.c ****         }
 173              		.loc 1 753 0
 174 003c 2D4B     		ldr	r3, .L12+20
 175              	.LVL14:
 176 003e 1968     		ldr	r1, [r3]
 177              	.LVL15:
 178 0040 2D4B     		ldr	r3, .L12+24
 179 0042 1B78     		ldrb	r3, [r3]
 180 0044 5B00     		lsl	r3, r3, #1
 181 0046 CA52     		strh	r2, [r1, r3]
 182 0048 05E0     		b	.L8
 183              	.LVL16:
 184              	.L7:
 185              		.loc 1 757 0
 186 004a 2A4A     		ldr	r2, .L12+20
 187              	.LVL17:
 188 004c 1168     		ldr	r1, [r2]
 189 004e 2A4A     		ldr	r2, .L12+24
 190 0050 1278     		ldrb	r2, [r2]
 191 0052 5200     		lsl	r2, r2, #1
 192 0054 8B52     		strh	r3, [r1, r2]
 193              	.LVL18:
 194              	.L8:
 195              	.LBE11:
 196              	.LBE10:
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 18


 281:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 197              		.loc 1 281 0
 198 0056 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 199              	.LVL19:
 200              	.LBB12:
 201              	.LBB13:
 758:Generated_Source\PSoC4/CapSense_INT.c ****         }
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 761:Generated_Source\PSoC4/CapSense_INT.c ****             /*  Init bad Conversions number */
 762:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 763:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 766:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_2000_MV <= CapSense_CYDEV_VDDA_MV))
 767:Generated_Source\PSoC4/CapSense_INT.c ****             /*  Disconnect Vrefhi from AMUBUF positive input. Disconnect AMUBUF output from CSDBUSB
 768:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 769:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 770:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_2000_MV <= CapSense_CYDEV_VDDA_MV)) */
 771:Generated_Source\PSoC4/CapSense_INT.c **** 
 772:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 773:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 774:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
 775:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 776:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 779:Generated_Source\PSoC4/CapSense_INT.c **** 
 780:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 781:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 784:Generated_Source\PSoC4/CapSense_INT.c **** }
 785:Generated_Source\PSoC4/CapSense_INT.c **** 
 786:Generated_Source\PSoC4/CapSense_INT.c **** 
 787:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 788:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 789:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 790:Generated_Source\PSoC4/CapSense_INT.c **** *
 791:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 792:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
 793:Generated_Source\PSoC4/CapSense_INT.c **** *
 794:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 795:Generated_Source\PSoC4/CapSense_INT.c **** *   The function decrements the sensor index, updates sense clock for matrix
 796:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 797:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all sensors are scanned it continues to set up the next widget
 798:Generated_Source\PSoC4/CapSense_INT.c **** *   until all widgets are scanned. The CSD block is disabled when all widgets are
 799:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
 800:Generated_Source\PSoC4/CapSense_INT.c **** *
 801:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/CapSense_INT.c **** CY_INLINE static void CapSense_SsCSDInitNextScan(void)
 803:Generated_Source\PSoC4/CapSense_INT.c **** {
 804:Generated_Source\PSoC4/CapSense_INT.c ****     /*  Declare and initialise ptr to widget and sensor structures to appropriate address */
 805:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 806:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 807:Generated_Source\PSoC4/CapSense_INT.c ****          (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 808:Generated_Source\PSoC4/CapSense_INT.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 19


 809:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN)))))
 810:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 811:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 202              		.loc 1 811 0
 203 005a 214B     		ldr	r3, .L12
 204 005c 1A78     		ldrb	r2, [r3]
 810:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 205              		.loc 1 810 0
 206 005e 2149     		ldr	r1, .L12+4
 207 0060 5201     		lsl	r2, r2, #5
 208 0062 8A18     		add	r2, r1, r2
 209 0064 5068     		ldr	r0, [r2, #4]
 210              	.LVL20:
 812:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* ((((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 813:Generated_Source\PSoC4/CapSense_INT.c ****                (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN
 814:Generated_Source\PSoC4/CapSense_INT.c ****                (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 815:Generated_Source\PSoC4/CapSense_INT.c ****                (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN
 816:Generated_Source\PSoC4/CapSense_INT.c ****                (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))) */
 817:Generated_Source\PSoC4/CapSense_INT.c **** 
 818:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all sensors are scanned in widget */
 819:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
 211              		.loc 1 819 0
 212 0066 1B78     		ldrb	r3, [r3]
 213 0068 5B01     		lsl	r3, r3, #5
 214 006a CB18     		add	r3, r1, r3
 215 006c 9B7D     		ldrb	r3, [r3, #22]
 216 006e 1E4A     		ldr	r2, .L12+8
 217 0070 1278     		ldrb	r2, [r2]
 218 0072 013B     		sub	r3, r3, #1
 219 0074 9342     		cmp	r3, r2
 220 0076 1BD9     		bls	.L9
 820:Generated_Source\PSoC4/CapSense_INT.c ****     {
 821:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Decrement snsIndex to configure next sensor in widget */
 822:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
 221              		.loc 1 822 0
 222 0078 1B4C     		ldr	r4, .L12+8
 223 007a 2378     		ldrb	r3, [r4]
 224 007c 0133     		add	r3, r3, #1
 225 007e DBB2     		uxtb	r3, r3
 226 0080 2370     		strb	r3, [r4]
 823:Generated_Source\PSoC4/CapSense_INT.c **** 
 824:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 825:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
 826:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 227              		.loc 1 826 0
 228 0082 174D     		ldr	r5, .L12
 229 0084 2B78     		ldrb	r3, [r5]
 230 0086 5B01     		lsl	r3, r3, #5
 231 0088 CB18     		add	r3, r1, r3
 232 008a 9968     		ldr	r1, [r3, #8]
 827:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 233              		.loc 1 827 0
 234 008c 2278     		ldrb	r2, [r4]
 235 008e 9300     		lsl	r3, r2, #2
 236 0090 9B18     		add	r3, r3, r2
 237 0092 5B00     		lsl	r3, r3, #1
 238 0094 CB18     		add	r3, r1, r3
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 20


 825:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 239              		.loc 1 825 0
 240 0096 174A     		ldr	r2, .L12+20
 241 0098 1360     		str	r3, [r2]
 828:Generated_Source\PSoC4/CapSense_INT.c **** 
 829:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 830:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 831:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 832:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[(CapSe
 833:Generated_Source\PSoC4/CapSense_INT.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[(
 834:Generated_Source\PSoC4/CapSense_INT.c ****             {
 835:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDConfigClock();
 836:Generated_Source\PSoC4/CapSense_INT.c **** 
 837:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 838:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Set up scanning resolution */
 839:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 840:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 841:Generated_Source\PSoC4/CapSense_INT.c ****             }
 842:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 843:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGE
 844:Generated_Source\PSoC4/CapSense_INT.c **** 
 845:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 846:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 847:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 848:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 242              		.loc 1 848 0
 243 009a FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 244              	.LVL21:
 849:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 850:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 851:Generated_Source\PSoC4/CapSense_INT.c **** 
 852:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 853:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 245              		.loc 1 853 0
 246 009e 2878     		ldrb	r0, [r5]
 247 00a0 C0B2     		uxtb	r0, r0
 248 00a2 2178     		ldrb	r1, [r4]
 249 00a4 C9B2     		uxtb	r1, r1
 250 00a6 FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 251              	.LVL22:
 854:Generated_Source\PSoC4/CapSense_INT.c **** 
 855:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
 856:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 252              		.loc 1 856 0
 253 00aa FFF7FEFF 		bl	CapSense_SsCSDStartSample
 254              	.LVL23:
 255 00ae 15E0     		b	.L6
 256              	.LVL24:
 257              	.L9:
 857:Generated_Source\PSoC4/CapSense_INT.c ****     }
 858:Generated_Source\PSoC4/CapSense_INT.c ****     /*    Call scan next widget API if requested, if not, complete the scan  */
 859:Generated_Source\PSoC4/CapSense_INT.c ****     else
 860:Generated_Source\PSoC4/CapSense_INT.c ****     {
 861:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 258              		.loc 1 861 0
 259 00b0 0022     		mov	r2, #0
 260 00b2 0D4B     		ldr	r3, .L12+8
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 21


 261 00b4 1A70     		strb	r2, [r3]
 862:Generated_Source\PSoC4/CapSense_INT.c **** 
 863:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 864:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 262              		.loc 1 864 0
 263 00b6 114A     		ldr	r2, .L12+28
 264 00b8 114B     		ldr	r3, .L12+32
 265 00ba 9168     		ldr	r1, [r2, #8]
 266 00bc 0B40     		and	r3, r1
 267 00be 9360     		str	r3, [r2, #8]
 865:Generated_Source\PSoC4/CapSense_INT.c **** 
 866:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all widgets have been scanned */
 867:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 268              		.loc 1 867 0
 269 00c0 104A     		ldr	r2, .L12+36
 270 00c2 1278     		ldrb	r2, [r2]
 271 00c4 012A     		cmp	r2, #1
 272 00c6 02D1     		bne	.L11
 868:Generated_Source\PSoC4/CapSense_INT.c ****         {
 869:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 870:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 273              		.loc 1 870 0
 274 00c8 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 275              	.LVL25:
 276 00cc 06E0     		b	.L6
 277              	.LVL26:
 278              	.L11:
 871:Generated_Source\PSoC4/CapSense_INT.c ****         }
 872:Generated_Source\PSoC4/CapSense_INT.c ****         else
 873:Generated_Source\PSoC4/CapSense_INT.c ****         {
 874:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 875:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 876:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable the CSD block */
 877:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 878:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable the CSD block. Connect Vref Buffer to AMUX bus */
 880:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 881:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 882:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 883:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&
 886:Generated_Source\PSoC4/CapSense_INT.c ****                                (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 887:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 888:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 889:Generated_Source\PSoC4/CapSense_INT.c **** 
 890:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 891:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 279              		.loc 1 891 0
 280 00ce 0B4A     		ldr	r2, .L12+28
 281 00d0 8021     		mov	r1, #128
 282 00d2 8B43     		bic	r3, r1
 283 00d4 9360     		str	r3, [r2, #8]
 892:Generated_Source\PSoC4/CapSense_INT.c **** 
 893:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 894:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 284              		.loc 1 894 0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 22


 285 00d6 D388     		ldrh	r3, [r2, #6]
 286 00d8 0133     		add	r3, r3, #1
 287 00da D380     		strh	r3, [r2, #6]
 288              	.LVL27:
 289              	.L6:
 290              	.LBE13:
 291              	.LBE12:
 310:Generated_Source\PSoC4/CapSense_INT.c **** 
 292              		.loc 1 310 0
 293              		@ sp needed
 294 00dc 38BD     		pop	{r3, r4, r5, pc}
 295              	.L13:
 296 00de C046     		.align	2
 297              	.L12:
 298 00e0 00000000 		.word	CapSense_widgetIndex
 299 00e4 00000000 		.word	CapSense_dsFlash
 300 00e8 00000000 		.word	CapSense_sensorIndex
 301 00ec F0000B40 		.word	1074462960
 302 00f0 D0000B40 		.word	1074462928
 303 00f4 00000000 		.word	CapSense_curRamSnsPtr
 304 00f8 00000000 		.word	CapSense_scanFreqIndex
 305 00fc 00000000 		.word	CapSense_dsRam
 306 0100 FFFFFEFF 		.word	-65537
 307 0104 00000000 		.word	CapSense_requestScanAllWidget
 308              		.cfi_endproc
 309              	.LFE2:
 310              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
 311              		.text
 312              	.Letext0:
 313              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 314              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 315              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 316              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 317              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 318              		.file 7 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 319              		.section	.debug_info,"",%progbits
 320              	.Ldebug_info0:
 321 0000 FF070000 		.4byte	0x7ff
 322 0004 0400     		.2byte	0x4
 323 0006 00000000 		.4byte	.Ldebug_abbrev0
 324 000a 04       		.byte	0x4
 325 000b 01       		.uleb128 0x1
 326 000c 52060000 		.4byte	.LASF109
 327 0010 01       		.byte	0x1
 328 0011 10020000 		.4byte	.LASF110
 329 0015 67020000 		.4byte	.LASF111
 330 0019 00000000 		.4byte	.Ldebug_ranges0+0
 331 001d 00000000 		.4byte	0
 332 0021 00000000 		.4byte	.Ldebug_line0
 333 0025 02       		.uleb128 0x2
 334 0026 01       		.byte	0x1
 335 0027 06       		.byte	0x6
 336 0028 1C010000 		.4byte	.LASF0
 337 002c 02       		.uleb128 0x2
 338 002d 01       		.byte	0x1
 339 002e 08       		.byte	0x8
 340 002f 6D040000 		.4byte	.LASF1
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 23


 341 0033 02       		.uleb128 0x2
 342 0034 02       		.byte	0x2
 343 0035 05       		.byte	0x5
 344 0036 A5040000 		.4byte	.LASF2
 345 003a 02       		.uleb128 0x2
 346 003b 02       		.byte	0x2
 347 003c 07       		.byte	0x7
 348 003d D0020000 		.4byte	.LASF3
 349 0041 02       		.uleb128 0x2
 350 0042 04       		.byte	0x4
 351 0043 05       		.byte	0x5
 352 0044 4D010000 		.4byte	.LASF4
 353 0048 02       		.uleb128 0x2
 354 0049 04       		.byte	0x4
 355 004a 07       		.byte	0x7
 356 004b 95020000 		.4byte	.LASF5
 357 004f 02       		.uleb128 0x2
 358 0050 08       		.byte	0x8
 359 0051 05       		.byte	0x5
 360 0052 0E010000 		.4byte	.LASF6
 361 0056 02       		.uleb128 0x2
 362 0057 08       		.byte	0x8
 363 0058 07       		.byte	0x7
 364 0059 57000000 		.4byte	.LASF7
 365 005d 03       		.uleb128 0x3
 366 005e 04       		.byte	0x4
 367 005f 05       		.byte	0x5
 368 0060 696E7400 		.ascii	"int\000"
 369 0064 02       		.uleb128 0x2
 370 0065 04       		.byte	0x4
 371 0066 07       		.byte	0x7
 372 0067 3B020000 		.4byte	.LASF8
 373 006b 04       		.uleb128 0x4
 374 006c 71010000 		.4byte	.LASF9
 375 0070 02       		.byte	0x2
 376 0071 B901     		.2byte	0x1b9
 377 0073 2C000000 		.4byte	0x2c
 378 0077 04       		.uleb128 0x4
 379 0078 00000000 		.4byte	.LASF10
 380 007c 02       		.byte	0x2
 381 007d BA01     		.2byte	0x1ba
 382 007f 3A000000 		.4byte	0x3a
 383 0083 04       		.uleb128 0x4
 384 0084 BA010000 		.4byte	.LASF11
 385 0088 02       		.byte	0x2
 386 0089 BB01     		.2byte	0x1bb
 387 008b 48000000 		.4byte	0x48
 388 008f 02       		.uleb128 0x2
 389 0090 04       		.byte	0x4
 390 0091 04       		.byte	0x4
 391 0092 D4030000 		.4byte	.LASF12
 392 0096 02       		.uleb128 0x2
 393 0097 08       		.byte	0x8
 394 0098 04       		.byte	0x4
 395 0099 77010000 		.4byte	.LASF13
 396 009d 02       		.uleb128 0x2
 397 009e 01       		.byte	0x1
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 24


 398 009f 08       		.byte	0x8
 399 00a0 F4040000 		.4byte	.LASF14
 400 00a4 05       		.uleb128 0x5
 401 00a5 6B000000 		.4byte	0x6b
 402 00a9 04       		.uleb128 0x4
 403 00aa 4C030000 		.4byte	.LASF15
 404 00ae 02       		.byte	0x2
 405 00af 6502     		.2byte	0x265
 406 00b1 B5000000 		.4byte	0xb5
 407 00b5 05       		.uleb128 0x5
 408 00b6 83000000 		.4byte	0x83
 409 00ba 06       		.uleb128 0x6
 410 00bb C5000000 		.4byte	.LASF16
 411 00bf 03       		.byte	0x3
 412 00c0 D7       		.byte	0xd7
 413 00c1 77000000 		.4byte	0x77
 414 00c5 06       		.uleb128 0x6
 415 00c6 80000000 		.4byte	.LASF17
 416 00ca 03       		.byte	0x3
 417 00cb DB       		.byte	0xdb
 418 00cc 6B000000 		.4byte	0x6b
 419 00d0 02       		.uleb128 0x2
 420 00d1 04       		.byte	0x4
 421 00d2 07       		.byte	0x7
 422 00d3 81030000 		.4byte	.LASF18
 423 00d7 07       		.uleb128 0x7
 424 00d8 04       		.byte	0x4
 425 00d9 08       		.uleb128 0x8
 426 00da 6B000000 		.4byte	0x6b
 427 00de 09       		.uleb128 0x9
 428 00df 04       		.byte	0x4
 429 00e0 6B000000 		.4byte	0x6b
 430 00e4 0A       		.uleb128 0xa
 431 00e5 0C       		.byte	0xc
 432 00e6 04       		.byte	0x4
 433 00e7 6C       		.byte	0x6c
 434 00e8 41010000 		.4byte	0x141
 435 00ec 0B       		.uleb128 0xb
 436 00ed 00060000 		.4byte	.LASF19
 437 00f1 04       		.byte	0x4
 438 00f2 6E       		.byte	0x6e
 439 00f3 77000000 		.4byte	0x77
 440 00f7 00       		.byte	0
 441 00f8 0B       		.uleb128 0xb
 442 00f9 7B040000 		.4byte	.LASF20
 443 00fd 04       		.byte	0x4
 444 00fe 6F       		.byte	0x6f
 445 00ff 77000000 		.4byte	0x77
 446 0103 02       		.byte	0x2
 447 0104 0B       		.uleb128 0xb
 448 0105 82040000 		.4byte	.LASF21
 449 0109 04       		.byte	0x4
 450 010a 70       		.byte	0x70
 451 010b 77000000 		.4byte	0x77
 452 010f 04       		.byte	0x4
 453 0110 0B       		.uleb128 0xb
 454 0111 89040000 		.4byte	.LASF22
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 25


 455 0115 04       		.byte	0x4
 456 0116 71       		.byte	0x71
 457 0117 77000000 		.4byte	0x77
 458 011b 06       		.byte	0x6
 459 011c 0B       		.uleb128 0xb
 460 011d 90040000 		.4byte	.LASF23
 461 0121 04       		.byte	0x4
 462 0122 72       		.byte	0x72
 463 0123 77000000 		.4byte	0x77
 464 0127 08       		.byte	0x8
 465 0128 0B       		.uleb128 0xb
 466 0129 97040000 		.4byte	.LASF24
 467 012d 04       		.byte	0x4
 468 012e 73       		.byte	0x73
 469 012f 6B000000 		.4byte	0x6b
 470 0133 0A       		.byte	0xa
 471 0134 0B       		.uleb128 0xb
 472 0135 9E040000 		.4byte	.LASF25
 473 0139 04       		.byte	0x4
 474 013a 74       		.byte	0x74
 475 013b 6B000000 		.4byte	0x6b
 476 013f 0B       		.byte	0xb
 477 0140 00       		.byte	0
 478 0141 06       		.uleb128 0x6
 479 0142 F3030000 		.4byte	.LASF26
 480 0146 04       		.byte	0x4
 481 0147 75       		.byte	0x75
 482 0148 E4000000 		.4byte	0xe4
 483 014c 0A       		.uleb128 0xa
 484 014d 12       		.byte	0x12
 485 014e 05       		.byte	0x5
 486 014f 7C       		.byte	0x7c
 487 0150 F1010000 		.4byte	0x1f1
 488 0154 0B       		.uleb128 0xb
 489 0155 CA040000 		.4byte	.LASF27
 490 0159 05       		.byte	0x5
 491 015a 82       		.byte	0x82
 492 015b 77000000 		.4byte	0x77
 493 015f 00       		.byte	0
 494 0160 0B       		.uleb128 0xb
 495 0161 F7050000 		.4byte	.LASF28
 496 0165 05       		.byte	0x5
 497 0166 87       		.byte	0x87
 498 0167 BA000000 		.4byte	0xba
 499 016b 02       		.byte	0x2
 500 016c 0B       		.uleb128 0xb
 501 016d E4060000 		.4byte	.LASF29
 502 0171 05       		.byte	0x5
 503 0172 8C       		.byte	0x8c
 504 0173 6B000000 		.4byte	0x6b
 505 0177 04       		.byte	0x4
 506 0178 0B       		.uleb128 0xb
 507 0179 97030000 		.4byte	.LASF30
 508 017d 05       		.byte	0x5
 509 017e 91       		.byte	0x91
 510 017f 6B000000 		.4byte	0x6b
 511 0183 05       		.byte	0x5
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 26


 512 0184 0B       		.uleb128 0xb
 513 0185 C1010000 		.4byte	.LASF31
 514 0189 05       		.byte	0x5
 515 018a 96       		.byte	0x96
 516 018b 6B000000 		.4byte	0x6b
 517 018f 06       		.byte	0x6
 518 0190 0B       		.uleb128 0xb
 519 0191 3D050000 		.4byte	.LASF32
 520 0195 05       		.byte	0x5
 521 0196 9B       		.byte	0x9b
 522 0197 6B000000 		.4byte	0x6b
 523 019b 07       		.byte	0x7
 524 019c 0B       		.uleb128 0xb
 525 019d BD020000 		.4byte	.LASF33
 526 01a1 05       		.byte	0x5
 527 01a2 A1       		.byte	0xa1
 528 01a3 C5000000 		.4byte	0xc5
 529 01a7 08       		.byte	0x8
 530 01a8 0B       		.uleb128 0xb
 531 01a9 18040000 		.4byte	.LASF34
 532 01ad 05       		.byte	0x5
 533 01ae A6       		.byte	0xa6
 534 01af 6B000000 		.4byte	0x6b
 535 01b3 09       		.byte	0x9
 536 01b4 0B       		.uleb128 0xb
 537 01b5 52030000 		.4byte	.LASF35
 538 01b9 05       		.byte	0x5
 539 01ba AD       		.byte	0xad
 540 01bb F1010000 		.4byte	0x1f1
 541 01bf 0A       		.byte	0xa
 542 01c0 0B       		.uleb128 0xb
 543 01c1 FF040000 		.4byte	.LASF36
 544 01c5 05       		.byte	0x5
 545 01c6 B4       		.byte	0xb4
 546 01c7 6B000000 		.4byte	0x6b
 547 01cb 0B       		.byte	0xb
 548 01cc 0B       		.uleb128 0xb
 549 01cd EA050000 		.4byte	.LASF37
 550 01d1 05       		.byte	0x5
 551 01d2 B9       		.byte	0xb9
 552 01d3 6B000000 		.4byte	0x6b
 553 01d7 0C       		.byte	0xc
 554 01d8 0B       		.uleb128 0xb
 555 01d9 35000000 		.4byte	.LASF38
 556 01dd 05       		.byte	0x5
 557 01de BF       		.byte	0xbf
 558 01df 77000000 		.4byte	0x77
 559 01e3 0E       		.byte	0xe
 560 01e4 0B       		.uleb128 0xb
 561 01e5 A0030000 		.4byte	.LASF39
 562 01e9 05       		.byte	0x5
 563 01ea C4       		.byte	0xc4
 564 01eb 77000000 		.4byte	0x77
 565 01ef 10       		.byte	0x10
 566 01f0 00       		.byte	0
 567 01f1 0C       		.uleb128 0xc
 568 01f2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 27


 569 01f6 01020000 		.4byte	0x201
 570 01fa 0D       		.uleb128 0xd
 571 01fb D0000000 		.4byte	0xd0
 572 01ff 00       		.byte	0
 573 0200 00       		.byte	0
 574 0201 06       		.uleb128 0x6
 575 0202 06050000 		.4byte	.LASF40
 576 0206 05       		.byte	0x5
 577 0207 C5       		.byte	0xc5
 578 0208 4C010000 		.4byte	0x14c
 579 020c 0A       		.uleb128 0xa
 580 020d 12       		.byte	0x12
 581 020e 05       		.byte	0x5
 582 020f CA       		.byte	0xca
 583 0210 B5020000 		.4byte	0x2b5
 584 0214 0B       		.uleb128 0xb
 585 0215 CA040000 		.4byte	.LASF27
 586 0219 05       		.byte	0x5
 587 021a D0       		.byte	0xd0
 588 021b 77000000 		.4byte	0x77
 589 021f 00       		.byte	0
 590 0220 0B       		.uleb128 0xb
 591 0221 F7050000 		.4byte	.LASF28
 592 0225 05       		.byte	0x5
 593 0226 D5       		.byte	0xd5
 594 0227 BA000000 		.4byte	0xba
 595 022b 02       		.byte	0x2
 596 022c 0B       		.uleb128 0xb
 597 022d E4060000 		.4byte	.LASF29
 598 0231 05       		.byte	0x5
 599 0232 DA       		.byte	0xda
 600 0233 6B000000 		.4byte	0x6b
 601 0237 04       		.byte	0x4
 602 0238 0B       		.uleb128 0xb
 603 0239 97030000 		.4byte	.LASF30
 604 023d 05       		.byte	0x5
 605 023e DF       		.byte	0xdf
 606 023f 6B000000 		.4byte	0x6b
 607 0243 05       		.byte	0x5
 608 0244 0B       		.uleb128 0xb
 609 0245 C1010000 		.4byte	.LASF31
 610 0249 05       		.byte	0x5
 611 024a E4       		.byte	0xe4
 612 024b 6B000000 		.4byte	0x6b
 613 024f 06       		.byte	0x6
 614 0250 0B       		.uleb128 0xb
 615 0251 3D050000 		.4byte	.LASF32
 616 0255 05       		.byte	0x5
 617 0256 E9       		.byte	0xe9
 618 0257 6B000000 		.4byte	0x6b
 619 025b 07       		.byte	0x7
 620 025c 0B       		.uleb128 0xb
 621 025d BD020000 		.4byte	.LASF33
 622 0261 05       		.byte	0x5
 623 0262 EF       		.byte	0xef
 624 0263 C5000000 		.4byte	0xc5
 625 0267 08       		.byte	0x8
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 28


 626 0268 0B       		.uleb128 0xb
 627 0269 18040000 		.4byte	.LASF34
 628 026d 05       		.byte	0x5
 629 026e F4       		.byte	0xf4
 630 026f 6B000000 		.4byte	0x6b
 631 0273 09       		.byte	0x9
 632 0274 0B       		.uleb128 0xb
 633 0275 52030000 		.4byte	.LASF35
 634 0279 05       		.byte	0x5
 635 027a FB       		.byte	0xfb
 636 027b F1010000 		.4byte	0x1f1
 637 027f 0A       		.byte	0xa
 638 0280 0E       		.uleb128 0xe
 639 0281 FF040000 		.4byte	.LASF36
 640 0285 05       		.byte	0x5
 641 0286 0201     		.2byte	0x102
 642 0288 6B000000 		.4byte	0x6b
 643 028c 0B       		.byte	0xb
 644 028d 0E       		.uleb128 0xe
 645 028e EA050000 		.4byte	.LASF37
 646 0292 05       		.byte	0x5
 647 0293 0701     		.2byte	0x107
 648 0295 6B000000 		.4byte	0x6b
 649 0299 0C       		.byte	0xc
 650 029a 0E       		.uleb128 0xe
 651 029b 35000000 		.4byte	.LASF38
 652 029f 05       		.byte	0x5
 653 02a0 0D01     		.2byte	0x10d
 654 02a2 77000000 		.4byte	0x77
 655 02a6 0E       		.byte	0xe
 656 02a7 0E       		.uleb128 0xe
 657 02a8 A0030000 		.4byte	.LASF39
 658 02ac 05       		.byte	0x5
 659 02ad 1201     		.2byte	0x112
 660 02af 77000000 		.4byte	0x77
 661 02b3 10       		.byte	0x10
 662 02b4 00       		.byte	0
 663 02b5 04       		.uleb128 0x4
 664 02b6 2E030000 		.4byte	.LASF41
 665 02ba 05       		.byte	0x5
 666 02bb 1301     		.2byte	0x113
 667 02bd 0C020000 		.4byte	0x20c
 668 02c1 0F       		.uleb128 0xf
 669 02c2 12       		.byte	0x12
 670 02c3 05       		.byte	0x5
 671 02c4 1901     		.2byte	0x119
 672 02c6 D8020000 		.4byte	0x2d8
 673 02ca 0E       		.uleb128 0xe
 674 02cb D9050000 		.4byte	.LASF42
 675 02cf 05       		.byte	0x5
 676 02d0 1E01     		.2byte	0x11e
 677 02d2 B5020000 		.4byte	0x2b5
 678 02d6 00       		.byte	0
 679 02d7 00       		.byte	0
 680 02d8 04       		.uleb128 0x4
 681 02d9 0D060000 		.4byte	.LASF43
 682 02dd 05       		.byte	0x5
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 29


 683 02de 1F01     		.2byte	0x11f
 684 02e0 C1020000 		.4byte	0x2c1
 685 02e4 0F       		.uleb128 0xf
 686 02e5 0A       		.byte	0xa
 687 02e6 05       		.byte	0x5
 688 02e7 2501     		.2byte	0x125
 689 02e9 3C030000 		.4byte	0x33c
 690 02ed 10       		.uleb128 0x10
 691 02ee 72617700 		.ascii	"raw\000"
 692 02f2 05       		.byte	0x5
 693 02f3 2A01     		.2byte	0x12a
 694 02f5 3C030000 		.4byte	0x33c
 695 02f9 00       		.byte	0
 696 02fa 0E       		.uleb128 0xe
 697 02fb 36020000 		.4byte	.LASF44
 698 02ff 05       		.byte	0x5
 699 0300 2F01     		.2byte	0x12f
 700 0302 3C030000 		.4byte	0x33c
 701 0306 02       		.byte	0x2
 702 0307 0E       		.uleb128 0xe
 703 0308 E8010000 		.4byte	.LASF45
 704 030c 05       		.byte	0x5
 705 030d 3501     		.2byte	0x135
 706 030f F1010000 		.4byte	0x1f1
 707 0313 04       		.byte	0x4
 708 0314 0E       		.uleb128 0xe
 709 0315 7B000000 		.4byte	.LASF46
 710 0319 05       		.byte	0x5
 711 031a 3A01     		.2byte	0x13a
 712 031c BA000000 		.4byte	0xba
 713 0320 06       		.byte	0x6
 714 0321 0E       		.uleb128 0xe
 715 0322 6F050000 		.4byte	.LASF47
 716 0326 05       		.byte	0x5
 717 0327 3F01     		.2byte	0x13f
 718 0329 4C030000 		.4byte	0x34c
 719 032d 08       		.byte	0x8
 720 032e 0E       		.uleb128 0xe
 721 032f 66050000 		.4byte	.LASF48
 722 0333 05       		.byte	0x5
 723 0334 4501     		.2byte	0x145
 724 0336 F1010000 		.4byte	0x1f1
 725 033a 09       		.byte	0x9
 726 033b 00       		.byte	0
 727 033c 0C       		.uleb128 0xc
 728 033d 77000000 		.4byte	0x77
 729 0341 4C030000 		.4byte	0x34c
 730 0345 0D       		.uleb128 0xd
 731 0346 D0000000 		.4byte	0xd0
 732 034a 00       		.byte	0
 733 034b 00       		.byte	0
 734 034c 0C       		.uleb128 0xc
 735 034d C5000000 		.4byte	0xc5
 736 0351 5C030000 		.4byte	0x35c
 737 0355 0D       		.uleb128 0xd
 738 0356 D0000000 		.4byte	0xd0
 739 035a 00       		.byte	0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 30


 740 035b 00       		.byte	0
 741 035c 04       		.uleb128 0x4
 742 035d 3F000000 		.4byte	.LASF49
 743 0361 05       		.byte	0x5
 744 0362 4601     		.2byte	0x146
 745 0364 E4020000 		.4byte	0x2e4
 746 0368 0F       		.uleb128 0xf
 747 0369 0A       		.byte	0xa
 748 036a 05       		.byte	0x5
 749 036b 4C01     		.2byte	0x14c
 750 036d 7F030000 		.4byte	0x37f
 751 0371 0E       		.uleb128 0xe
 752 0372 D9050000 		.4byte	.LASF42
 753 0376 05       		.byte	0x5
 754 0377 5101     		.2byte	0x151
 755 0379 7F030000 		.4byte	0x37f
 756 037d 00       		.byte	0
 757 037e 00       		.byte	0
 758 037f 0C       		.uleb128 0xc
 759 0380 5C030000 		.4byte	0x35c
 760 0384 8F030000 		.4byte	0x38f
 761 0388 0D       		.uleb128 0xd
 762 0389 D0000000 		.4byte	0xd0
 763 038d 00       		.byte	0
 764 038e 00       		.byte	0
 765 038f 04       		.uleb128 0x4
 766 0390 22040000 		.4byte	.LASF50
 767 0394 05       		.byte	0x5
 768 0395 5201     		.2byte	0x152
 769 0397 68030000 		.4byte	0x368
 770 039b 0F       		.uleb128 0xf
 771 039c 3C       		.byte	0x3c
 772 039d 05       		.byte	0x5
 773 039e 5901     		.2byte	0x159
 774 03a0 75040000 		.4byte	0x475
 775 03a4 0E       		.uleb128 0xe
 776 03a5 05030000 		.4byte	.LASF51
 777 03a9 05       		.byte	0x5
 778 03aa 5F01     		.2byte	0x15f
 779 03ac 77000000 		.4byte	0x77
 780 03b0 00       		.byte	0
 781 03b1 0E       		.uleb128 0xe
 782 03b2 25030000 		.4byte	.LASF52
 783 03b6 05       		.byte	0x5
 784 03b7 6401     		.2byte	0x164
 785 03b9 77000000 		.4byte	0x77
 786 03bd 02       		.byte	0x2
 787 03be 0E       		.uleb128 0xe
 788 03bf CB030000 		.4byte	.LASF53
 789 03c3 05       		.byte	0x5
 790 03c4 6A01     		.2byte	0x16a
 791 03c6 77000000 		.4byte	0x77
 792 03ca 04       		.byte	0x4
 793 03cb 0E       		.uleb128 0xe
 794 03cc B0030000 		.4byte	.LASF54
 795 03d0 05       		.byte	0x5
 796 03d1 6F01     		.2byte	0x16f
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 31


 797 03d3 77000000 		.4byte	0x77
 798 03d7 06       		.byte	0x6
 799 03d8 0E       		.uleb128 0xe
 800 03d9 C8050000 		.4byte	.LASF55
 801 03dd 05       		.byte	0x5
 802 03de 7401     		.2byte	0x174
 803 03e0 83000000 		.4byte	0x83
 804 03e4 08       		.byte	0x8
 805 03e5 0E       		.uleb128 0xe
 806 03e6 A7020000 		.4byte	.LASF56
 807 03ea 05       		.byte	0x5
 808 03eb 7901     		.2byte	0x179
 809 03ed 75040000 		.4byte	0x475
 810 03f1 0C       		.byte	0xc
 811 03f2 0E       		.uleb128 0xe
 812 03f3 F0010000 		.4byte	.LASF57
 813 03f7 05       		.byte	0x5
 814 03f8 7E01     		.2byte	0x17e
 815 03fa 75040000 		.4byte	0x475
 816 03fe 10       		.byte	0x10
 817 03ff 0E       		.uleb128 0xe
 818 0400 43010000 		.4byte	.LASF58
 819 0404 05       		.byte	0x5
 820 0405 8C01     		.2byte	0x18c
 821 0407 F1010000 		.4byte	0x1f1
 822 040b 14       		.byte	0x14
 823 040c 0E       		.uleb128 0xe
 824 040d 0E030000 		.4byte	.LASF59
 825 0411 05       		.byte	0x5
 826 0412 9101     		.2byte	0x191
 827 0414 77000000 		.4byte	0x77
 828 0418 16       		.byte	0x16
 829 0419 0E       		.uleb128 0xe
 830 041a 56010000 		.4byte	.LASF60
 831 041e 05       		.byte	0x5
 832 041f 9601     		.2byte	0x196
 833 0421 6B000000 		.4byte	0x6b
 834 0425 18       		.byte	0x18
 835 0426 0E       		.uleb128 0xe
 836 0427 D5040000 		.4byte	.LASF61
 837 042b 05       		.byte	0x5
 838 042c 9B01     		.2byte	0x19b
 839 042e D8020000 		.4byte	0x2d8
 840 0432 1A       		.byte	0x1a
 841 0433 0E       		.uleb128 0xe
 842 0434 FD020000 		.4byte	.LASF62
 843 0438 05       		.byte	0x5
 844 0439 A001     		.2byte	0x1a0
 845 043b 8F030000 		.4byte	0x38f
 846 043f 2C       		.byte	0x2c
 847 0440 0E       		.uleb128 0xe
 848 0441 48020000 		.4byte	.LASF63
 849 0445 05       		.byte	0x5
 850 0446 A501     		.2byte	0x1a5
 851 0448 6B000000 		.4byte	0x6b
 852 044c 36       		.byte	0x36
 853 044d 0E       		.uleb128 0xe
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 32


 854 044e A4000000 		.4byte	.LASF64
 855 0452 05       		.byte	0x5
 856 0453 AA01     		.2byte	0x1aa
 857 0455 6B000000 		.4byte	0x6b
 858 0459 37       		.byte	0x37
 859 045a 0E       		.uleb128 0xe
 860 045b 29060000 		.4byte	.LASF65
 861 045f 05       		.byte	0x5
 862 0460 AF01     		.2byte	0x1af
 863 0462 77000000 		.4byte	0x77
 864 0466 38       		.byte	0x38
 865 0467 0E       		.uleb128 0xe
 866 0468 7E010000 		.4byte	.LASF66
 867 046c 05       		.byte	0x5
 868 046d B401     		.2byte	0x1b4
 869 046f 3C030000 		.4byte	0x33c
 870 0473 3A       		.byte	0x3a
 871 0474 00       		.byte	0
 872 0475 0C       		.uleb128 0xc
 873 0476 83000000 		.4byte	0x83
 874 047a 85040000 		.4byte	0x485
 875 047e 0D       		.uleb128 0xd
 876 047f D0000000 		.4byte	0xd0
 877 0483 00       		.byte	0
 878 0484 00       		.byte	0
 879 0485 04       		.uleb128 0x4
 880 0486 3F040000 		.4byte	.LASF67
 881 048a 05       		.byte	0x5
 882 048b B501     		.2byte	0x1b5
 883 048d 9B030000 		.4byte	0x39b
 884 0491 0F       		.uleb128 0xf
 885 0492 1C       		.byte	0x1c
 886 0493 05       		.byte	0x5
 887 0494 BB01     		.2byte	0x1bb
 888 0496 10050000 		.4byte	0x510
 889 049a 0E       		.uleb128 0xe
 890 049b 9B000000 		.4byte	.LASF68
 891 049f 05       		.byte	0x5
 892 04a0 C001     		.2byte	0x1c0
 893 04a2 10050000 		.4byte	0x510
 894 04a6 00       		.byte	0
 895 04a7 0E       		.uleb128 0xe
 896 04a8 07060000 		.4byte	.LASF69
 897 04ac 05       		.byte	0x5
 898 04ad C501     		.2byte	0x1c5
 899 04af 10050000 		.4byte	0x510
 900 04b3 04       		.byte	0x4
 901 04b4 0E       		.uleb128 0xe
 902 04b5 F9040000 		.4byte	.LASF70
 903 04b9 05       		.byte	0x5
 904 04ba CA01     		.2byte	0x1ca
 905 04bc 10050000 		.4byte	0x510
 906 04c0 08       		.byte	0x8
 907 04c1 0E       		.uleb128 0xe
 908 04c2 6B010000 		.4byte	.LASF71
 909 04c6 05       		.byte	0x5
 910 04c7 CF01     		.2byte	0x1cf
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 33


 911 04c9 10050000 		.4byte	0x510
 912 04cd 0C       		.byte	0xc
 913 04ce 0E       		.uleb128 0xe
 914 04cf 3C060000 		.4byte	.LASF72
 915 04d3 05       		.byte	0x5
 916 04d4 D401     		.2byte	0x1d4
 917 04d6 83000000 		.4byte	0x83
 918 04da 10       		.byte	0x10
 919 04db 0E       		.uleb128 0xe
 920 04dc E3010000 		.4byte	.LASF73
 921 04e0 05       		.byte	0x5
 922 04e1 D901     		.2byte	0x1d9
 923 04e3 83000000 		.4byte	0x83
 924 04e7 14       		.byte	0x14
 925 04e8 0E       		.uleb128 0xe
 926 04e9 BF040000 		.4byte	.LASF74
 927 04ed 05       		.byte	0x5
 928 04ee DE01     		.2byte	0x1de
 929 04f0 6B000000 		.4byte	0x6b
 930 04f4 18       		.byte	0x18
 931 04f5 0E       		.uleb128 0xe
 932 04f6 B2010000 		.4byte	.LASF75
 933 04fa 05       		.byte	0x5
 934 04fb E301     		.2byte	0x1e3
 935 04fd 6B000000 		.4byte	0x6b
 936 0501 19       		.byte	0x19
 937 0502 0E       		.uleb128 0xe
 938 0503 8E010000 		.4byte	.LASF76
 939 0507 05       		.byte	0x5
 940 0508 E801     		.2byte	0x1e8
 941 050a 6B000000 		.4byte	0x6b
 942 050e 1A       		.byte	0x1a
 943 050f 00       		.byte	0
 944 0510 09       		.uleb128 0x9
 945 0511 04       		.byte	0x4
 946 0512 A9000000 		.4byte	0xa9
 947 0516 04       		.uleb128 0x4
 948 0517 AF050000 		.4byte	.LASF77
 949 051b 05       		.byte	0x5
 950 051c E901     		.2byte	0x1e9
 951 051e 91040000 		.4byte	0x491
 952 0522 0F       		.uleb128 0xf
 953 0523 20       		.byte	0x20
 954 0524 05       		.byte	0x5
 955 0525 1402     		.2byte	0x214
 956 0527 AE050000 		.4byte	0x5ae
 957 052b 0E       		.uleb128 0xe
 958 052c 6E000000 		.4byte	.LASF78
 959 0530 05       		.byte	0x5
 960 0531 1D02     		.2byte	0x21d
 961 0533 AE050000 		.4byte	0x5ae
 962 0537 00       		.byte	0
 963 0538 0E       		.uleb128 0xe
 964 0539 19030000 		.4byte	.LASF79
 965 053d 05       		.byte	0x5
 966 053e 2302     		.2byte	0x223
 967 0540 D7000000 		.4byte	0xd7
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 34


 968 0544 04       		.byte	0x4
 969 0545 0E       		.uleb128 0xe
 970 0546 60010000 		.4byte	.LASF80
 971 054a 05       		.byte	0x5
 972 054b 2902     		.2byte	0x229
 973 054d B5050000 		.4byte	0x5b5
 974 0551 08       		.byte	0x8
 975 0552 0E       		.uleb128 0xe
 976 0553 AF040000 		.4byte	.LASF81
 977 0557 05       		.byte	0x5
 978 0558 2E02     		.2byte	0x22e
 979 055a D7000000 		.4byte	0xd7
 980 055e 0C       		.byte	0xc
 981 055f 0E       		.uleb128 0xe
 982 0560 89050000 		.4byte	.LASF82
 983 0564 05       		.byte	0x5
 984 0565 3502     		.2byte	0x235
 985 0567 DE000000 		.4byte	0xde
 986 056b 10       		.byte	0x10
 987 056c 0E       		.uleb128 0xe
 988 056d 8A030000 		.4byte	.LASF83
 989 0571 05       		.byte	0x5
 990 0572 3A02     		.2byte	0x23a
 991 0574 77000000 		.4byte	0x77
 992 0578 14       		.byte	0x14
 993 0579 0E       		.uleb128 0xe
 994 057a 7D050000 		.4byte	.LASF84
 995 057e 05       		.byte	0x5
 996 057f 4102     		.2byte	0x241
 997 0581 77000000 		.4byte	0x77
 998 0585 16       		.byte	0x16
 999 0586 0E       		.uleb128 0xe
 1000 0587 A7030000 		.4byte	.LASF85
 1001 058b 05       		.byte	0x5
 1002 058c 4C02     		.2byte	0x24c
 1003 058e 6B000000 		.4byte	0x6b
 1004 0592 18       		.byte	0x18
 1005 0593 0E       		.uleb128 0xe
 1006 0594 79030000 		.4byte	.LASF86
 1007 0598 05       		.byte	0x5
 1008 0599 5402     		.2byte	0x254
 1009 059b 6B000000 		.4byte	0x6b
 1010 059f 19       		.byte	0x19
 1011 05a0 0E       		.uleb128 0xe
 1012 05a1 58020000 		.4byte	.LASF87
 1013 05a5 05       		.byte	0x5
 1014 05a6 5C02     		.2byte	0x25c
 1015 05a8 BB050000 		.4byte	0x5bb
 1016 05ac 1C       		.byte	0x1c
 1017 05ad 00       		.byte	0
 1018 05ae 09       		.uleb128 0x9
 1019 05af 04       		.byte	0x4
 1020 05b0 B4050000 		.4byte	0x5b4
 1021 05b4 11       		.uleb128 0x11
 1022 05b5 09       		.uleb128 0x9
 1023 05b6 04       		.byte	0x4
 1024 05b7 5C030000 		.4byte	0x35c
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 35


 1025 05bb 09       		.uleb128 0x9
 1026 05bc 04       		.byte	0x4
 1027 05bd 41010000 		.4byte	0x141
 1028 05c1 04       		.uleb128 0x4
 1029 05c2 07000000 		.4byte	.LASF88
 1030 05c6 05       		.byte	0x5
 1031 05c7 5D02     		.2byte	0x25d
 1032 05c9 22050000 		.4byte	0x522
 1033 05cd 0F       		.uleb128 0xf
 1034 05ce 20       		.byte	0x20
 1035 05cf 05       		.byte	0x5
 1036 05d0 6302     		.2byte	0x263
 1037 05d2 E4050000 		.4byte	0x5e4
 1038 05d6 0E       		.uleb128 0xe
 1039 05d7 CF050000 		.4byte	.LASF89
 1040 05db 05       		.byte	0x5
 1041 05dc 6802     		.2byte	0x268
 1042 05de E4050000 		.4byte	0x5e4
 1043 05e2 00       		.byte	0
 1044 05e3 00       		.byte	0
 1045 05e4 0C       		.uleb128 0xc
 1046 05e5 C1050000 		.4byte	0x5c1
 1047 05e9 F4050000 		.4byte	0x5f4
 1048 05ed 0D       		.uleb128 0xd
 1049 05ee D0000000 		.4byte	0xd0
 1050 05f2 00       		.byte	0
 1051 05f3 00       		.byte	0
 1052 05f4 04       		.uleb128 0x4
 1053 05f5 99050000 		.4byte	.LASF90
 1054 05f9 05       		.byte	0x5
 1055 05fa 6902     		.2byte	0x269
 1056 05fc CD050000 		.4byte	0x5cd
 1057 0600 12       		.uleb128 0x12
 1058 0601 CC010000 		.4byte	.LASF94
 1059 0605 01       		.byte	0x1
 1060 0606 E202     		.2byte	0x2e2
 1061 0608 03       		.byte	0x3
 1062 0609 32060000 		.4byte	0x632
 1063 060d 13       		.uleb128 0x13
 1064 060e B2020000 		.4byte	.LASF91
 1065 0612 01       		.byte	0x1
 1066 0613 E602     		.2byte	0x2e6
 1067 0615 83000000 		.4byte	0x83
 1068 0619 13       		.uleb128 0x13
 1069 061a 46060000 		.4byte	.LASF92
 1070 061e 01       		.byte	0x1
 1071 061f E702     		.2byte	0x2e7
 1072 0621 83000000 		.4byte	0x83
 1073 0625 13       		.uleb128 0x13
 1074 0626 C8020000 		.4byte	.LASF93
 1075 062a 01       		.byte	0x1
 1076 062b E802     		.2byte	0x2e8
 1077 062d 32060000 		.4byte	0x632
 1078 0631 00       		.byte	0
 1079 0632 09       		.uleb128 0x9
 1080 0633 04       		.byte	0x4
 1081 0634 38060000 		.4byte	0x638
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 36


 1082 0638 08       		.uleb128 0x8
 1083 0639 01020000 		.4byte	0x201
 1084 063d 14       		.uleb128 0x14
 1085 063e 22050000 		.4byte	.LASF96
 1086 0642 01       		.byte	0x1
 1087 0643 7F       		.byte	0x7f
 1088 0644 00000000 		.4byte	.LFB1
 1089 0648 74000000 		.4byte	.LFE1-.LFB1
 1090 064c 01       		.uleb128 0x1
 1091 064d 9C       		.byte	0x9c
 1092 064e 88060000 		.4byte	0x688
 1093 0652 15       		.uleb128 0x15
 1094 0653 00060000 		.4byte	0x600
 1095 0657 08000000 		.4byte	.LBB4
 1096 065b 3A000000 		.4byte	.LBE4-.LBB4
 1097 065f 01       		.byte	0x1
 1098 0660 9A       		.byte	0x9a
 1099 0661 16       		.uleb128 0x16
 1100 0662 08000000 		.4byte	.LBB5
 1101 0666 3A000000 		.4byte	.LBE5-.LBB5
 1102 066a 17       		.uleb128 0x17
 1103 066b 0D060000 		.4byte	0x60d
 1104 066f 00000000 		.4byte	.LLST0
 1105 0673 17       		.uleb128 0x17
 1106 0674 19060000 		.4byte	0x619
 1107 0678 13000000 		.4byte	.LLST1
 1108 067c 17       		.uleb128 0x17
 1109 067d 25060000 		.4byte	0x625
 1110 0681 42000000 		.4byte	.LLST2
 1111 0685 00       		.byte	0
 1112 0686 00       		.byte	0
 1113 0687 00       		.byte	0
 1114 0688 12       		.uleb128 0x12
 1115 0689 28010000 		.4byte	.LASF95
 1116 068d 01       		.byte	0x1
 1117 068e 2203     		.2byte	0x322
 1118 0690 03       		.byte	0x3
 1119 0691 A2060000 		.4byte	0x6a2
 1120 0695 13       		.uleb128 0x13
 1121 0696 C8020000 		.4byte	.LASF93
 1122 069a 01       		.byte	0x1
 1123 069b 2A03     		.2byte	0x32a
 1124 069d A2060000 		.4byte	0x6a2
 1125 06a1 00       		.byte	0
 1126 06a2 09       		.uleb128 0x9
 1127 06a3 04       		.byte	0x4
 1128 06a4 01020000 		.4byte	0x201
 1129 06a8 14       		.uleb128 0x14
 1130 06a9 DD000000 		.4byte	.LASF97
 1131 06ad 01       		.byte	0x1
 1132 06ae EE       		.byte	0xee
 1133 06af 00000000 		.4byte	.LFB2
 1134 06b3 08010000 		.4byte	.LFE2-.LFB2
 1135 06b7 01       		.uleb128 0x1
 1136 06b8 9C       		.byte	0x9c
 1137 06b9 5C070000 		.4byte	0x75c
 1138 06bd 18       		.uleb128 0x18
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 37


 1139 06be DE050000 		.4byte	.LASF112
 1140 06c2 01       		.byte	0x1
 1141 06c3 F1       		.byte	0xf1
 1142 06c4 5C070000 		.4byte	0x75c
 1143 06c8 55000000 		.4byte	.LLST3
 1144 06cc 19       		.uleb128 0x19
 1145 06cd 00060000 		.4byte	0x600
 1146 06d1 20000000 		.4byte	.LBB10
 1147 06d5 36000000 		.4byte	.LBE10-.LBB10
 1148 06d9 01       		.byte	0x1
 1149 06da 0E01     		.2byte	0x10e
 1150 06dc 06070000 		.4byte	0x706
 1151 06e0 16       		.uleb128 0x16
 1152 06e1 20000000 		.4byte	.LBB11
 1153 06e5 36000000 		.4byte	.LBE11-.LBB11
 1154 06e9 17       		.uleb128 0x17
 1155 06ea 0D060000 		.4byte	0x60d
 1156 06ee 68000000 		.4byte	.LLST4
 1157 06f2 17       		.uleb128 0x17
 1158 06f3 19060000 		.4byte	0x619
 1159 06f7 7B000000 		.4byte	.LLST5
 1160 06fb 17       		.uleb128 0x17
 1161 06fc 25060000 		.4byte	0x625
 1162 0700 AA000000 		.4byte	.LLST6
 1163 0704 00       		.byte	0
 1164 0705 00       		.byte	0
 1165 0706 19       		.uleb128 0x19
 1166 0707 88060000 		.4byte	0x688
 1167 070b 5A000000 		.4byte	.LBB12
 1168 070f 82000000 		.4byte	.LBE12-.LBB12
 1169 0713 01       		.byte	0x1
 1170 0714 2D01     		.2byte	0x12d
 1171 0716 52070000 		.4byte	0x752
 1172 071a 16       		.uleb128 0x16
 1173 071b 5A000000 		.4byte	.LBB13
 1174 071f 82000000 		.4byte	.LBE13-.LBB13
 1175 0723 17       		.uleb128 0x17
 1176 0724 95060000 		.4byte	0x695
 1177 0728 BD000000 		.4byte	.LLST7
 1178 072c 1A       		.uleb128 0x1a
 1179 072d 9E000000 		.4byte	.LVL21
 1180 0731 C0070000 		.4byte	0x7c0
 1181 0735 1A       		.uleb128 0x1a
 1182 0736 AA000000 		.4byte	.LVL22
 1183 073a D1070000 		.4byte	0x7d1
 1184 073e 1A       		.uleb128 0x1a
 1185 073f AE000000 		.4byte	.LVL23
 1186 0743 E7070000 		.4byte	0x7e7
 1187 0747 1A       		.uleb128 0x1a
 1188 0748 CC000000 		.4byte	.LVL25
 1189 074c EE070000 		.4byte	0x7ee
 1190 0750 00       		.byte	0
 1191 0751 00       		.byte	0
 1192 0752 1A       		.uleb128 0x1a
 1193 0753 5A000000 		.4byte	.LVL19
 1194 0757 F5070000 		.4byte	0x7f5
 1195 075b 00       		.byte	0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 38


 1196 075c 09       		.uleb128 0x9
 1197 075d 04       		.byte	0x4
 1198 075e 62070000 		.4byte	0x762
 1199 0762 08       		.uleb128 0x8
 1200 0763 16050000 		.4byte	0x516
 1201 0767 1B       		.uleb128 0x1b
 1202 0768 BC030000 		.4byte	.LASF98
 1203 076c 05       		.byte	0x5
 1204 076d C003     		.2byte	0x3c0
 1205 076f 85040000 		.4byte	0x485
 1206 0773 1B       		.uleb128 0x1b
 1207 0774 B4000000 		.4byte	.LASF99
 1208 0778 05       		.byte	0x5
 1209 0779 C103     		.2byte	0x3c1
 1210 077b 7F070000 		.4byte	0x77f
 1211 077f 08       		.uleb128 0x8
 1212 0780 F4050000 		.4byte	0x5f4
 1213 0784 1B       		.uleb128 0x1b
 1214 0785 F7000000 		.4byte	.LASF100
 1215 0789 06       		.byte	0x6
 1216 078a 4905     		.2byte	0x549
 1217 078c D9000000 		.4byte	0xd9
 1218 0790 1B       		.uleb128 0x1b
 1219 0791 20000000 		.4byte	.LASF101
 1220 0795 06       		.byte	0x6
 1221 0796 5105     		.2byte	0x551
 1222 0798 A4000000 		.4byte	0xa4
 1223 079c 1B       		.uleb128 0x1b
 1224 079d FB010000 		.4byte	.LASF102
 1225 07a1 06       		.byte	0x6
 1226 07a2 5205     		.2byte	0x552
 1227 07a4 A4000000 		.4byte	0xa4
 1228 07a8 1B       		.uleb128 0x1b
 1229 07a9 94010000 		.4byte	.LASF103
 1230 07ad 06       		.byte	0x6
 1231 07ae 5405     		.2byte	0x554
 1232 07b0 6B000000 		.4byte	0x6b
 1233 07b4 1B       		.uleb128 0x1b
 1234 07b5 DE040000 		.4byte	.LASF104
 1235 07b9 06       		.byte	0x6
 1236 07ba 5905     		.2byte	0x559
 1237 07bc B5050000 		.4byte	0x5b5
 1238 07c0 1C       		.uleb128 0x1c
 1239 07c1 DA030000 		.4byte	.LASF105
 1240 07c5 07       		.byte	0x7
 1241 07c6 54       		.byte	0x54
 1242 07c7 D1070000 		.4byte	0x7d1
 1243 07cb 1D       		.uleb128 0x1d
 1244 07cc 32060000 		.4byte	0x632
 1245 07d0 00       		.byte	0
 1246 07d1 1C       		.uleb128 0x1c
 1247 07d2 5A030000 		.4byte	.LASF106
 1248 07d6 07       		.byte	0x7
 1249 07d7 60       		.byte	0x60
 1250 07d8 E7070000 		.4byte	0x7e7
 1251 07dc 1D       		.uleb128 0x1d
 1252 07dd 83000000 		.4byte	0x83
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 39


 1253 07e1 1D       		.uleb128 0x1d
 1254 07e2 83000000 		.4byte	0x83
 1255 07e6 00       		.byte	0
 1256 07e7 1E       		.uleb128 0x1e
 1257 07e8 53040000 		.4byte	.LASF107
 1258 07ec 07       		.byte	0x7
 1259 07ed 53       		.byte	0x53
 1260 07ee 1E       		.uleb128 0x1e
 1261 07ef 48050000 		.4byte	.LASF108
 1262 07f3 06       		.byte	0x6
 1263 07f4 7E       		.byte	0x7e
 1264 07f5 1F       		.uleb128 0x1f
 1265 07f6 E3020000 		.4byte	.LASF113
 1266 07fa 07       		.byte	0x7
 1267 07fb 44       		.byte	0x44
 1268 07fc 1D       		.uleb128 0x1d
 1269 07fd 5C070000 		.4byte	0x75c
 1270 0801 00       		.byte	0
 1271 0802 00       		.byte	0
 1272              		.section	.debug_abbrev,"",%progbits
 1273              	.Ldebug_abbrev0:
 1274 0000 01       		.uleb128 0x1
 1275 0001 11       		.uleb128 0x11
 1276 0002 01       		.byte	0x1
 1277 0003 25       		.uleb128 0x25
 1278 0004 0E       		.uleb128 0xe
 1279 0005 13       		.uleb128 0x13
 1280 0006 0B       		.uleb128 0xb
 1281 0007 03       		.uleb128 0x3
 1282 0008 0E       		.uleb128 0xe
 1283 0009 1B       		.uleb128 0x1b
 1284 000a 0E       		.uleb128 0xe
 1285 000b 55       		.uleb128 0x55
 1286 000c 17       		.uleb128 0x17
 1287 000d 11       		.uleb128 0x11
 1288 000e 01       		.uleb128 0x1
 1289 000f 10       		.uleb128 0x10
 1290 0010 17       		.uleb128 0x17
 1291 0011 00       		.byte	0
 1292 0012 00       		.byte	0
 1293 0013 02       		.uleb128 0x2
 1294 0014 24       		.uleb128 0x24
 1295 0015 00       		.byte	0
 1296 0016 0B       		.uleb128 0xb
 1297 0017 0B       		.uleb128 0xb
 1298 0018 3E       		.uleb128 0x3e
 1299 0019 0B       		.uleb128 0xb
 1300 001a 03       		.uleb128 0x3
 1301 001b 0E       		.uleb128 0xe
 1302 001c 00       		.byte	0
 1303 001d 00       		.byte	0
 1304 001e 03       		.uleb128 0x3
 1305 001f 24       		.uleb128 0x24
 1306 0020 00       		.byte	0
 1307 0021 0B       		.uleb128 0xb
 1308 0022 0B       		.uleb128 0xb
 1309 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 40


 1310 0024 0B       		.uleb128 0xb
 1311 0025 03       		.uleb128 0x3
 1312 0026 08       		.uleb128 0x8
 1313 0027 00       		.byte	0
 1314 0028 00       		.byte	0
 1315 0029 04       		.uleb128 0x4
 1316 002a 16       		.uleb128 0x16
 1317 002b 00       		.byte	0
 1318 002c 03       		.uleb128 0x3
 1319 002d 0E       		.uleb128 0xe
 1320 002e 3A       		.uleb128 0x3a
 1321 002f 0B       		.uleb128 0xb
 1322 0030 3B       		.uleb128 0x3b
 1323 0031 05       		.uleb128 0x5
 1324 0032 49       		.uleb128 0x49
 1325 0033 13       		.uleb128 0x13
 1326 0034 00       		.byte	0
 1327 0035 00       		.byte	0
 1328 0036 05       		.uleb128 0x5
 1329 0037 35       		.uleb128 0x35
 1330 0038 00       		.byte	0
 1331 0039 49       		.uleb128 0x49
 1332 003a 13       		.uleb128 0x13
 1333 003b 00       		.byte	0
 1334 003c 00       		.byte	0
 1335 003d 06       		.uleb128 0x6
 1336 003e 16       		.uleb128 0x16
 1337 003f 00       		.byte	0
 1338 0040 03       		.uleb128 0x3
 1339 0041 0E       		.uleb128 0xe
 1340 0042 3A       		.uleb128 0x3a
 1341 0043 0B       		.uleb128 0xb
 1342 0044 3B       		.uleb128 0x3b
 1343 0045 0B       		.uleb128 0xb
 1344 0046 49       		.uleb128 0x49
 1345 0047 13       		.uleb128 0x13
 1346 0048 00       		.byte	0
 1347 0049 00       		.byte	0
 1348 004a 07       		.uleb128 0x7
 1349 004b 0F       		.uleb128 0xf
 1350 004c 00       		.byte	0
 1351 004d 0B       		.uleb128 0xb
 1352 004e 0B       		.uleb128 0xb
 1353 004f 00       		.byte	0
 1354 0050 00       		.byte	0
 1355 0051 08       		.uleb128 0x8
 1356 0052 26       		.uleb128 0x26
 1357 0053 00       		.byte	0
 1358 0054 49       		.uleb128 0x49
 1359 0055 13       		.uleb128 0x13
 1360 0056 00       		.byte	0
 1361 0057 00       		.byte	0
 1362 0058 09       		.uleb128 0x9
 1363 0059 0F       		.uleb128 0xf
 1364 005a 00       		.byte	0
 1365 005b 0B       		.uleb128 0xb
 1366 005c 0B       		.uleb128 0xb
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 41


 1367 005d 49       		.uleb128 0x49
 1368 005e 13       		.uleb128 0x13
 1369 005f 00       		.byte	0
 1370 0060 00       		.byte	0
 1371 0061 0A       		.uleb128 0xa
 1372 0062 13       		.uleb128 0x13
 1373 0063 01       		.byte	0x1
 1374 0064 0B       		.uleb128 0xb
 1375 0065 0B       		.uleb128 0xb
 1376 0066 3A       		.uleb128 0x3a
 1377 0067 0B       		.uleb128 0xb
 1378 0068 3B       		.uleb128 0x3b
 1379 0069 0B       		.uleb128 0xb
 1380 006a 01       		.uleb128 0x1
 1381 006b 13       		.uleb128 0x13
 1382 006c 00       		.byte	0
 1383 006d 00       		.byte	0
 1384 006e 0B       		.uleb128 0xb
 1385 006f 0D       		.uleb128 0xd
 1386 0070 00       		.byte	0
 1387 0071 03       		.uleb128 0x3
 1388 0072 0E       		.uleb128 0xe
 1389 0073 3A       		.uleb128 0x3a
 1390 0074 0B       		.uleb128 0xb
 1391 0075 3B       		.uleb128 0x3b
 1392 0076 0B       		.uleb128 0xb
 1393 0077 49       		.uleb128 0x49
 1394 0078 13       		.uleb128 0x13
 1395 0079 38       		.uleb128 0x38
 1396 007a 0B       		.uleb128 0xb
 1397 007b 00       		.byte	0
 1398 007c 00       		.byte	0
 1399 007d 0C       		.uleb128 0xc
 1400 007e 01       		.uleb128 0x1
 1401 007f 01       		.byte	0x1
 1402 0080 49       		.uleb128 0x49
 1403 0081 13       		.uleb128 0x13
 1404 0082 01       		.uleb128 0x1
 1405 0083 13       		.uleb128 0x13
 1406 0084 00       		.byte	0
 1407 0085 00       		.byte	0
 1408 0086 0D       		.uleb128 0xd
 1409 0087 21       		.uleb128 0x21
 1410 0088 00       		.byte	0
 1411 0089 49       		.uleb128 0x49
 1412 008a 13       		.uleb128 0x13
 1413 008b 2F       		.uleb128 0x2f
 1414 008c 0B       		.uleb128 0xb
 1415 008d 00       		.byte	0
 1416 008e 00       		.byte	0
 1417 008f 0E       		.uleb128 0xe
 1418 0090 0D       		.uleb128 0xd
 1419 0091 00       		.byte	0
 1420 0092 03       		.uleb128 0x3
 1421 0093 0E       		.uleb128 0xe
 1422 0094 3A       		.uleb128 0x3a
 1423 0095 0B       		.uleb128 0xb
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 42


 1424 0096 3B       		.uleb128 0x3b
 1425 0097 05       		.uleb128 0x5
 1426 0098 49       		.uleb128 0x49
 1427 0099 13       		.uleb128 0x13
 1428 009a 38       		.uleb128 0x38
 1429 009b 0B       		.uleb128 0xb
 1430 009c 00       		.byte	0
 1431 009d 00       		.byte	0
 1432 009e 0F       		.uleb128 0xf
 1433 009f 13       		.uleb128 0x13
 1434 00a0 01       		.byte	0x1
 1435 00a1 0B       		.uleb128 0xb
 1436 00a2 0B       		.uleb128 0xb
 1437 00a3 3A       		.uleb128 0x3a
 1438 00a4 0B       		.uleb128 0xb
 1439 00a5 3B       		.uleb128 0x3b
 1440 00a6 05       		.uleb128 0x5
 1441 00a7 01       		.uleb128 0x1
 1442 00a8 13       		.uleb128 0x13
 1443 00a9 00       		.byte	0
 1444 00aa 00       		.byte	0
 1445 00ab 10       		.uleb128 0x10
 1446 00ac 0D       		.uleb128 0xd
 1447 00ad 00       		.byte	0
 1448 00ae 03       		.uleb128 0x3
 1449 00af 08       		.uleb128 0x8
 1450 00b0 3A       		.uleb128 0x3a
 1451 00b1 0B       		.uleb128 0xb
 1452 00b2 3B       		.uleb128 0x3b
 1453 00b3 05       		.uleb128 0x5
 1454 00b4 49       		.uleb128 0x49
 1455 00b5 13       		.uleb128 0x13
 1456 00b6 38       		.uleb128 0x38
 1457 00b7 0B       		.uleb128 0xb
 1458 00b8 00       		.byte	0
 1459 00b9 00       		.byte	0
 1460 00ba 11       		.uleb128 0x11
 1461 00bb 26       		.uleb128 0x26
 1462 00bc 00       		.byte	0
 1463 00bd 00       		.byte	0
 1464 00be 00       		.byte	0
 1465 00bf 12       		.uleb128 0x12
 1466 00c0 2E       		.uleb128 0x2e
 1467 00c1 01       		.byte	0x1
 1468 00c2 03       		.uleb128 0x3
 1469 00c3 0E       		.uleb128 0xe
 1470 00c4 3A       		.uleb128 0x3a
 1471 00c5 0B       		.uleb128 0xb
 1472 00c6 3B       		.uleb128 0x3b
 1473 00c7 05       		.uleb128 0x5
 1474 00c8 27       		.uleb128 0x27
 1475 00c9 19       		.uleb128 0x19
 1476 00ca 20       		.uleb128 0x20
 1477 00cb 0B       		.uleb128 0xb
 1478 00cc 01       		.uleb128 0x1
 1479 00cd 13       		.uleb128 0x13
 1480 00ce 00       		.byte	0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 43


 1481 00cf 00       		.byte	0
 1482 00d0 13       		.uleb128 0x13
 1483 00d1 34       		.uleb128 0x34
 1484 00d2 00       		.byte	0
 1485 00d3 03       		.uleb128 0x3
 1486 00d4 0E       		.uleb128 0xe
 1487 00d5 3A       		.uleb128 0x3a
 1488 00d6 0B       		.uleb128 0xb
 1489 00d7 3B       		.uleb128 0x3b
 1490 00d8 05       		.uleb128 0x5
 1491 00d9 49       		.uleb128 0x49
 1492 00da 13       		.uleb128 0x13
 1493 00db 00       		.byte	0
 1494 00dc 00       		.byte	0
 1495 00dd 14       		.uleb128 0x14
 1496 00de 2E       		.uleb128 0x2e
 1497 00df 01       		.byte	0x1
 1498 00e0 3F       		.uleb128 0x3f
 1499 00e1 19       		.uleb128 0x19
 1500 00e2 03       		.uleb128 0x3
 1501 00e3 0E       		.uleb128 0xe
 1502 00e4 3A       		.uleb128 0x3a
 1503 00e5 0B       		.uleb128 0xb
 1504 00e6 3B       		.uleb128 0x3b
 1505 00e7 0B       		.uleb128 0xb
 1506 00e8 27       		.uleb128 0x27
 1507 00e9 19       		.uleb128 0x19
 1508 00ea 11       		.uleb128 0x11
 1509 00eb 01       		.uleb128 0x1
 1510 00ec 12       		.uleb128 0x12
 1511 00ed 06       		.uleb128 0x6
 1512 00ee 40       		.uleb128 0x40
 1513 00ef 18       		.uleb128 0x18
 1514 00f0 9742     		.uleb128 0x2117
 1515 00f2 19       		.uleb128 0x19
 1516 00f3 01       		.uleb128 0x1
 1517 00f4 13       		.uleb128 0x13
 1518 00f5 00       		.byte	0
 1519 00f6 00       		.byte	0
 1520 00f7 15       		.uleb128 0x15
 1521 00f8 1D       		.uleb128 0x1d
 1522 00f9 01       		.byte	0x1
 1523 00fa 31       		.uleb128 0x31
 1524 00fb 13       		.uleb128 0x13
 1525 00fc 11       		.uleb128 0x11
 1526 00fd 01       		.uleb128 0x1
 1527 00fe 12       		.uleb128 0x12
 1528 00ff 06       		.uleb128 0x6
 1529 0100 58       		.uleb128 0x58
 1530 0101 0B       		.uleb128 0xb
 1531 0102 59       		.uleb128 0x59
 1532 0103 0B       		.uleb128 0xb
 1533 0104 00       		.byte	0
 1534 0105 00       		.byte	0
 1535 0106 16       		.uleb128 0x16
 1536 0107 0B       		.uleb128 0xb
 1537 0108 01       		.byte	0x1
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 44


 1538 0109 11       		.uleb128 0x11
 1539 010a 01       		.uleb128 0x1
 1540 010b 12       		.uleb128 0x12
 1541 010c 06       		.uleb128 0x6
 1542 010d 00       		.byte	0
 1543 010e 00       		.byte	0
 1544 010f 17       		.uleb128 0x17
 1545 0110 34       		.uleb128 0x34
 1546 0111 00       		.byte	0
 1547 0112 31       		.uleb128 0x31
 1548 0113 13       		.uleb128 0x13
 1549 0114 02       		.uleb128 0x2
 1550 0115 17       		.uleb128 0x17
 1551 0116 00       		.byte	0
 1552 0117 00       		.byte	0
 1553 0118 18       		.uleb128 0x18
 1554 0119 34       		.uleb128 0x34
 1555 011a 00       		.byte	0
 1556 011b 03       		.uleb128 0x3
 1557 011c 0E       		.uleb128 0xe
 1558 011d 3A       		.uleb128 0x3a
 1559 011e 0B       		.uleb128 0xb
 1560 011f 3B       		.uleb128 0x3b
 1561 0120 0B       		.uleb128 0xb
 1562 0121 49       		.uleb128 0x49
 1563 0122 13       		.uleb128 0x13
 1564 0123 02       		.uleb128 0x2
 1565 0124 17       		.uleb128 0x17
 1566 0125 00       		.byte	0
 1567 0126 00       		.byte	0
 1568 0127 19       		.uleb128 0x19
 1569 0128 1D       		.uleb128 0x1d
 1570 0129 01       		.byte	0x1
 1571 012a 31       		.uleb128 0x31
 1572 012b 13       		.uleb128 0x13
 1573 012c 11       		.uleb128 0x11
 1574 012d 01       		.uleb128 0x1
 1575 012e 12       		.uleb128 0x12
 1576 012f 06       		.uleb128 0x6
 1577 0130 58       		.uleb128 0x58
 1578 0131 0B       		.uleb128 0xb
 1579 0132 59       		.uleb128 0x59
 1580 0133 05       		.uleb128 0x5
 1581 0134 01       		.uleb128 0x1
 1582 0135 13       		.uleb128 0x13
 1583 0136 00       		.byte	0
 1584 0137 00       		.byte	0
 1585 0138 1A       		.uleb128 0x1a
 1586 0139 898201   		.uleb128 0x4109
 1587 013c 00       		.byte	0
 1588 013d 11       		.uleb128 0x11
 1589 013e 01       		.uleb128 0x1
 1590 013f 31       		.uleb128 0x31
 1591 0140 13       		.uleb128 0x13
 1592 0141 00       		.byte	0
 1593 0142 00       		.byte	0
 1594 0143 1B       		.uleb128 0x1b
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 45


 1595 0144 34       		.uleb128 0x34
 1596 0145 00       		.byte	0
 1597 0146 03       		.uleb128 0x3
 1598 0147 0E       		.uleb128 0xe
 1599 0148 3A       		.uleb128 0x3a
 1600 0149 0B       		.uleb128 0xb
 1601 014a 3B       		.uleb128 0x3b
 1602 014b 05       		.uleb128 0x5
 1603 014c 49       		.uleb128 0x49
 1604 014d 13       		.uleb128 0x13
 1605 014e 3F       		.uleb128 0x3f
 1606 014f 19       		.uleb128 0x19
 1607 0150 3C       		.uleb128 0x3c
 1608 0151 19       		.uleb128 0x19
 1609 0152 00       		.byte	0
 1610 0153 00       		.byte	0
 1611 0154 1C       		.uleb128 0x1c
 1612 0155 2E       		.uleb128 0x2e
 1613 0156 01       		.byte	0x1
 1614 0157 3F       		.uleb128 0x3f
 1615 0158 19       		.uleb128 0x19
 1616 0159 03       		.uleb128 0x3
 1617 015a 0E       		.uleb128 0xe
 1618 015b 3A       		.uleb128 0x3a
 1619 015c 0B       		.uleb128 0xb
 1620 015d 3B       		.uleb128 0x3b
 1621 015e 0B       		.uleb128 0xb
 1622 015f 27       		.uleb128 0x27
 1623 0160 19       		.uleb128 0x19
 1624 0161 3C       		.uleb128 0x3c
 1625 0162 19       		.uleb128 0x19
 1626 0163 01       		.uleb128 0x1
 1627 0164 13       		.uleb128 0x13
 1628 0165 00       		.byte	0
 1629 0166 00       		.byte	0
 1630 0167 1D       		.uleb128 0x1d
 1631 0168 05       		.uleb128 0x5
 1632 0169 00       		.byte	0
 1633 016a 49       		.uleb128 0x49
 1634 016b 13       		.uleb128 0x13
 1635 016c 00       		.byte	0
 1636 016d 00       		.byte	0
 1637 016e 1E       		.uleb128 0x1e
 1638 016f 2E       		.uleb128 0x2e
 1639 0170 00       		.byte	0
 1640 0171 3F       		.uleb128 0x3f
 1641 0172 19       		.uleb128 0x19
 1642 0173 03       		.uleb128 0x3
 1643 0174 0E       		.uleb128 0xe
 1644 0175 3A       		.uleb128 0x3a
 1645 0176 0B       		.uleb128 0xb
 1646 0177 3B       		.uleb128 0x3b
 1647 0178 0B       		.uleb128 0xb
 1648 0179 27       		.uleb128 0x27
 1649 017a 19       		.uleb128 0x19
 1650 017b 3C       		.uleb128 0x3c
 1651 017c 19       		.uleb128 0x19
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 46


 1652 017d 00       		.byte	0
 1653 017e 00       		.byte	0
 1654 017f 1F       		.uleb128 0x1f
 1655 0180 2E       		.uleb128 0x2e
 1656 0181 01       		.byte	0x1
 1657 0182 3F       		.uleb128 0x3f
 1658 0183 19       		.uleb128 0x19
 1659 0184 03       		.uleb128 0x3
 1660 0185 0E       		.uleb128 0xe
 1661 0186 3A       		.uleb128 0x3a
 1662 0187 0B       		.uleb128 0xb
 1663 0188 3B       		.uleb128 0x3b
 1664 0189 0B       		.uleb128 0xb
 1665 018a 27       		.uleb128 0x27
 1666 018b 19       		.uleb128 0x19
 1667 018c 3C       		.uleb128 0x3c
 1668 018d 19       		.uleb128 0x19
 1669 018e 00       		.byte	0
 1670 018f 00       		.byte	0
 1671 0190 00       		.byte	0
 1672              		.section	.debug_loc,"",%progbits
 1673              	.Ldebug_loc0:
 1674              	.LLST0:
 1675 0000 1C000000 		.4byte	.LVL1
 1676 0004 38000000 		.4byte	.LVL7
 1677 0008 0100     		.2byte	0x1
 1678 000a 52       		.byte	0x52
 1679 000b 00000000 		.4byte	0
 1680 000f 00000000 		.4byte	0
 1681              	.LLST1:
 1682 0013 24000000 		.4byte	.LVL3
 1683 0017 2A000000 		.4byte	.LVL4
 1684 001b 0100     		.2byte	0x1
 1685 001d 53       		.byte	0x53
 1686 001e 2A000000 		.4byte	.LVL4
 1687 0022 2C000000 		.4byte	.LVL5
 1688 0026 0700     		.2byte	0x7
 1689 0028 31       		.byte	0x31
 1690 0029 71       		.byte	0x71
 1691 002a 00       		.sleb128 0
 1692 002b 24       		.byte	0x24
 1693 002c 31       		.byte	0x31
 1694 002d 1C       		.byte	0x1c
 1695 002e 9F       		.byte	0x9f
 1696 002f 36000000 		.4byte	.LVL6
 1697 0033 42000000 		.4byte	.LVL8
 1698 0037 0100     		.2byte	0x1
 1699 0039 53       		.byte	0x53
 1700 003a 00000000 		.4byte	0
 1701 003e 00000000 		.4byte	0
 1702              	.LLST2:
 1703 0042 14000000 		.4byte	.LVL0
 1704 0046 20000000 		.4byte	.LVL2
 1705 004a 0100     		.2byte	0x1
 1706 004c 53       		.byte	0x53
 1707 004d 00000000 		.4byte	0
 1708 0051 00000000 		.4byte	0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 47


 1709              	.LLST3:
 1710 0055 18000000 		.4byte	.LVL9
 1711 0059 59000000 		.4byte	.LVL19-1
 1712 005d 0100     		.2byte	0x1
 1713 005f 50       		.byte	0x50
 1714 0060 00000000 		.4byte	0
 1715 0064 00000000 		.4byte	0
 1716              	.LLST4:
 1717 0068 30000000 		.4byte	.LVL11
 1718 006c 4C000000 		.4byte	.LVL17
 1719 0070 0100     		.2byte	0x1
 1720 0072 52       		.byte	0x52
 1721 0073 00000000 		.4byte	0
 1722 0077 00000000 		.4byte	0
 1723              	.LLST5:
 1724 007b 38000000 		.4byte	.LVL13
 1725 007f 3E000000 		.4byte	.LVL14
 1726 0083 0100     		.2byte	0x1
 1727 0085 53       		.byte	0x53
 1728 0086 3E000000 		.4byte	.LVL14
 1729 008a 40000000 		.4byte	.LVL15
 1730 008e 0700     		.2byte	0x7
 1731 0090 31       		.byte	0x31
 1732 0091 71       		.byte	0x71
 1733 0092 00       		.sleb128 0
 1734 0093 24       		.byte	0x24
 1735 0094 31       		.byte	0x31
 1736 0095 1C       		.byte	0x1c
 1737 0096 9F       		.byte	0x9f
 1738 0097 4A000000 		.4byte	.LVL16
 1739 009b 56000000 		.4byte	.LVL18
 1740 009f 0100     		.2byte	0x1
 1741 00a1 53       		.byte	0x53
 1742 00a2 00000000 		.4byte	0
 1743 00a6 00000000 		.4byte	0
 1744              	.LLST6:
 1745 00aa 28000000 		.4byte	.LVL10
 1746 00ae 34000000 		.4byte	.LVL12
 1747 00b2 0100     		.2byte	0x1
 1748 00b4 53       		.byte	0x53
 1749 00b5 00000000 		.4byte	0
 1750 00b9 00000000 		.4byte	0
 1751              	.LLST7:
 1752 00bd 66000000 		.4byte	.LVL20
 1753 00c1 9D000000 		.4byte	.LVL21-1
 1754 00c5 0100     		.2byte	0x1
 1755 00c7 50       		.byte	0x50
 1756 00c8 B0000000 		.4byte	.LVL24
 1757 00cc CB000000 		.4byte	.LVL25-1
 1758 00d0 0100     		.2byte	0x1
 1759 00d2 50       		.byte	0x50
 1760 00d3 CE000000 		.4byte	.LVL26
 1761 00d7 DC000000 		.4byte	.LVL27
 1762 00db 0100     		.2byte	0x1
 1763 00dd 50       		.byte	0x50
 1764 00de 00000000 		.4byte	0
 1765 00e2 00000000 		.4byte	0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 48


 1766              		.section	.debug_aranges,"",%progbits
 1767 0000 24000000 		.4byte	0x24
 1768 0004 0200     		.2byte	0x2
 1769 0006 00000000 		.4byte	.Ldebug_info0
 1770 000a 04       		.byte	0x4
 1771 000b 00       		.byte	0
 1772 000c 0000     		.2byte	0
 1773 000e 0000     		.2byte	0
 1774 0010 00000000 		.4byte	.LFB1
 1775 0014 74000000 		.4byte	.LFE1-.LFB1
 1776 0018 00000000 		.4byte	.LFB2
 1777 001c 08010000 		.4byte	.LFE2-.LFB2
 1778 0020 00000000 		.4byte	0
 1779 0024 00000000 		.4byte	0
 1780              		.section	.debug_ranges,"",%progbits
 1781              	.Ldebug_ranges0:
 1782 0000 00000000 		.4byte	.LFB1
 1783 0004 74000000 		.4byte	.LFE1
 1784 0008 00000000 		.4byte	.LFB2
 1785 000c 08010000 		.4byte	.LFE2
 1786 0010 00000000 		.4byte	0
 1787 0014 00000000 		.4byte	0
 1788              		.section	.debug_line,"",%progbits
 1789              	.Ldebug_line0:
 1790 0000 35010000 		.section	.debug_str,"MS",%progbits,1
 1790      0200CB00 
 1790      00000201 
 1790      FB0E0D00 
 1790      01010101 
 1791              	.LASF10:
 1792 0000 75696E74 		.ascii	"uint16\000"
 1792      313600
 1793              	.LASF88:
 1794 0007 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1794      656E7365 
 1794      5F464C41 
 1794      53485F57 
 1794      445F5354 
 1795              	.LASF101:
 1796 0020 43617053 		.ascii	"CapSense_widgetIndex\000"
 1796      656E7365 
 1796      5F776964 
 1796      67657449 
 1796      6E646578 
 1797              	.LASF38:
 1798 0035 66696E67 		.ascii	"fingerCap\000"
 1798      65724361 
 1798      7000
 1799              	.LASF49:
 1800 003f 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 1800      656E7365 
 1800      5F52414D 
 1800      5F534E53 
 1800      5F535452 
 1801              	.LASF7:
 1802 0057 6C6F6E67 		.ascii	"long long unsigned int\000"
 1802      206C6F6E 
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 49


 1802      6720756E 
 1802      7369676E 
 1802      65642069 
 1803              	.LASF78:
 1804 006e 70747232 		.ascii	"ptr2SnsFlash\000"
 1804      536E7346 
 1804      6C617368 
 1804      00
 1805              	.LASF46:
 1806 007b 64696666 		.ascii	"diff\000"
 1806      00
 1807              	.LASF17:
 1808 0080 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 1808      656E7365 
 1808      5F4C4F57 
 1808      5F42534C 
 1808      4E5F5253 
 1809              	.LASF68:
 1810 009b 6873696F 		.ascii	"hsiomPtr\000"
 1810      6D507472 
 1810      00
 1811              	.LASF64:
 1812 00a4 736E7254 		.ascii	"snrTestSensorId\000"
 1812      65737453 
 1812      656E736F 
 1812      72496400 
 1813              	.LASF99:
 1814 00b4 43617053 		.ascii	"CapSense_dsFlash\000"
 1814      656E7365 
 1814      5F647346 
 1814      6C617368 
 1814      00
 1815              	.LASF16:
 1816 00c5 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1816      656E7365 
 1816      5F544852 
 1816      4553484F 
 1816      4C445F54 
 1817              	.LASF97:
 1818 00dd 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 1818      656E7365 
 1818      5F435344 
 1818      506F7374 
 1818      4D756C74 
 1819              	.LASF100:
 1820 00f7 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 1820      656E7365 
 1820      5F736361 
 1820      6E467265 
 1820      71496E64 
 1821              	.LASF6:
 1822 010e 6C6F6E67 		.ascii	"long long int\000"
 1822      206C6F6E 
 1822      6720696E 
 1822      7400
 1823              	.LASF0:
 1824 011c 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 50


 1824      65642063 
 1824      68617200 
 1825              	.LASF95:
 1826 0128 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 1826      656E7365 
 1826      5F537343 
 1826      5344496E 
 1826      69744E65 
 1827              	.LASF58:
 1828 0143 736E7353 		.ascii	"snsStatus\000"
 1828      74617475 
 1828      7300
 1829              	.LASF4:
 1830 014d 6C6F6E67 		.ascii	"long int\000"
 1830      20696E74 
 1830      00
 1831              	.LASF60:
 1832 0156 6D6F6443 		.ascii	"modCsdClk\000"
 1832      7364436C 
 1832      6B00
 1833              	.LASF80:
 1834 0160 70747232 		.ascii	"ptr2SnsRam\000"
 1834      536E7352 
 1834      616D00
 1835              	.LASF71:
 1836 016b 70735074 		.ascii	"psPtr\000"
 1836      7200
 1837              	.LASF9:
 1838 0171 75696E74 		.ascii	"uint8\000"
 1838      3800
 1839              	.LASF13:
 1840 0177 646F7562 		.ascii	"double\000"
 1840      6C6500
 1841              	.LASF66:
 1842 017e 736E7254 		.ascii	"snrTestRawCount\000"
 1842      65737452 
 1842      6177436F 
 1842      756E7400 
 1843              	.LASF76:
 1844 018e 73686966 		.ascii	"shift\000"
 1844      7400
 1845              	.LASF103:
 1846 0194 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 1846      656E7365 
 1846      5F726571 
 1846      75657374 
 1846      5363616E 
 1847              	.LASF75:
 1848 01b2 64725368 		.ascii	"drShift\000"
 1848      69667400 
 1849              	.LASF11:
 1850 01ba 75696E74 		.ascii	"uint32\000"
 1850      333200
 1851              	.LASF31:
 1852 01c1 68797374 		.ascii	"hysteresis\000"
 1852      65726573 
 1852      697300
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 51


 1853              	.LASF94:
 1854 01cc 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1854      656E7365 
 1854      5F537343 
 1854      5344506F 
 1854      73745363 
 1855              	.LASF73:
 1856 01e3 6D61736B 		.ascii	"mask\000"
 1856      00
 1857              	.LASF45:
 1858 01e8 62736C6E 		.ascii	"bslnExt\000"
 1858      45787400 
 1859              	.LASF57:
 1860 01f0 77646774 		.ascii	"wdgtStatus\000"
 1860      53746174 
 1860      757300
 1861              	.LASF102:
 1862 01fb 43617053 		.ascii	"CapSense_sensorIndex\000"
 1862      656E7365 
 1862      5F73656E 
 1862      736F7249 
 1862      6E646578 
 1863              	.LASF110:
 1864 0210 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1864      72617465 
 1864      645F536F 
 1864      75726365 
 1864      5C50536F 
 1865              	.LASF44:
 1866 0236 62736C6E 		.ascii	"bsln\000"
 1866      00
 1867              	.LASF8:
 1868 023b 756E7369 		.ascii	"unsigned int\000"
 1868      676E6564 
 1868      20696E74 
 1868      00
 1869              	.LASF63:
 1870 0248 736E7254 		.ascii	"snrTestWidgetId\000"
 1870      65737457 
 1870      69646765 
 1870      74496400 
 1871              	.LASF87:
 1872 0258 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 1872      4E6F6973 
 1872      65456E76 
 1872      6C7000
 1873              	.LASF111:
 1874 0267 433A5C77 		.ascii	"C:\\work\\Eddie\\Eddie_DP0_Slider\\Prof_DP0.cydsn\000"
 1874      6F726B5C 
 1874      45646469 
 1874      655C4564 
 1874      6469655F 
 1875              	.LASF5:
 1876 0295 6C6F6E67 		.ascii	"long unsigned int\000"
 1876      20756E73 
 1876      69676E65 
 1876      6420696E 
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 52


 1876      7400
 1877              	.LASF56:
 1878 02a7 77646774 		.ascii	"wdgtEnable\000"
 1878      456E6162 
 1878      6C6500
 1879              	.LASF91:
 1880 02b2 746D7052 		.ascii	"tmpRawData\000"
 1880      61774461 
 1880      746100
 1881              	.LASF33:
 1882 02bd 6C6F7742 		.ascii	"lowBslnRst\000"
 1882      736C6E52 
 1882      737400
 1883              	.LASF93:
 1884 02c8 70747257 		.ascii	"ptrWdgt\000"
 1884      64677400 
 1885              	.LASF3:
 1886 02d0 73686F72 		.ascii	"short unsigned int\000"
 1886      7420756E 
 1886      7369676E 
 1886      65642069 
 1886      6E7400
 1887              	.LASF113:
 1888 02e3 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 1888      656E7365 
 1888      5F435344 
 1888      44697363 
 1888      6F6E6E65 
 1889              	.LASF62:
 1890 02fd 736E734C 		.ascii	"snsList\000"
 1890      69737400 
 1891              	.LASF51:
 1892 0305 636F6E66 		.ascii	"configId\000"
 1892      69674964 
 1892      00
 1893              	.LASF59:
 1894 030e 63736430 		.ascii	"csd0Config\000"
 1894      436F6E66 
 1894      696700
 1895              	.LASF79:
 1896 0319 70747232 		.ascii	"ptr2WdgtRam\000"
 1896      57646774 
 1896      52616D00 
 1897              	.LASF52:
 1898 0325 64657669 		.ascii	"deviceId\000"
 1898      63654964 
 1898      00
 1899              	.LASF41:
 1900 032e 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 1900      656E7365 
 1900      5F52414D 
 1900      5F57445F 
 1900      42555454 
 1901              	.LASF15:
 1902 034c 72656733 		.ascii	"reg32\000"
 1902      3200
 1903              	.LASF35:
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 53


 1904 0352 69646163 		.ascii	"idacMod\000"
 1904      4D6F6400 
 1905              	.LASF106:
 1906 035a 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1906      656E7365 
 1906      5F537343 
 1906      5344436F 
 1906      6E6E6563 
 1907              	.LASF86:
 1908 0379 6E756D43 		.ascii	"numCols\000"
 1908      6F6C7300 
 1909              	.LASF18:
 1910 0381 73697A65 		.ascii	"sizetype\000"
 1910      74797065 
 1910      00
 1911              	.LASF83:
 1912 038a 73746174 		.ascii	"staticConfig\000"
 1912      6963436F 
 1912      6E666967 
 1912      00
 1913              	.LASF30:
 1914 0397 6E4E6F69 		.ascii	"nNoiseTh\000"
 1914      73655468 
 1914      00
 1915              	.LASF39:
 1916 03a0 73696750 		.ascii	"sigPFC\000"
 1916      464300
 1917              	.LASF85:
 1918 03a7 77646774 		.ascii	"wdgtType\000"
 1918      54797065 
 1918      00
 1919              	.LASF54:
 1920 03b0 7363616E 		.ascii	"scanCounter\000"
 1920      436F756E 
 1920      74657200 
 1921              	.LASF98:
 1922 03bc 43617053 		.ascii	"CapSense_dsRam\000"
 1922      656E7365 
 1922      5F647352 
 1922      616D00
 1923              	.LASF53:
 1924 03cb 74756E65 		.ascii	"tunerCmd\000"
 1924      72436D64 
 1924      00
 1925              	.LASF12:
 1926 03d4 666C6F61 		.ascii	"float\000"
 1926      7400
 1927              	.LASF105:
 1928 03da 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 1928      656E7365 
 1928      5F537343 
 1928      53445365 
 1928      74557049 
 1929              	.LASF26:
 1930 03f3 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 1930      5453454E 
 1930      53455F43 
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 54


 1930      53445F4E 
 1930      4F495345 
 1931              	.LASF34:
 1932 0418 62736C6E 		.ascii	"bslnCoeff\000"
 1932      436F6566 
 1932      6600
 1933              	.LASF50:
 1934 0422 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 1934      656E7365 
 1934      5F52414D 
 1934      5F534E53 
 1934      5F4C4953 
 1935              	.LASF67:
 1936 043f 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 1936      656E7365 
 1936      5F52414D 
 1936      5F535452 
 1936      55435400 
 1937              	.LASF107:
 1938 0453 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 1938      656E7365 
 1938      5F537343 
 1938      53445374 
 1938      61727453 
 1939              	.LASF1:
 1940 046d 756E7369 		.ascii	"unsigned char\000"
 1940      676E6564 
 1940      20636861 
 1940      7200
 1941              	.LASF20:
 1942 047b 70617261 		.ascii	"param1\000"
 1942      6D3100
 1943              	.LASF21:
 1944 0482 70617261 		.ascii	"param2\000"
 1944      6D3200
 1945              	.LASF22:
 1946 0489 70617261 		.ascii	"param3\000"
 1946      6D3300
 1947              	.LASF23:
 1948 0490 70617261 		.ascii	"param4\000"
 1948      6D3400
 1949              	.LASF24:
 1950 0497 70617261 		.ascii	"param5\000"
 1950      6D3500
 1951              	.LASF25:
 1952 049e 70617261 		.ascii	"param6\000"
 1952      6D3600
 1953              	.LASF2:
 1954 04a5 73686F72 		.ascii	"short int\000"
 1954      7420696E 
 1954      7400
 1955              	.LASF81:
 1956 04af 70747232 		.ascii	"ptr2FltrHistory\000"
 1956      466C7472 
 1956      48697374 
 1956      6F727900 
 1957              	.LASF74:
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 55


 1958 04bf 6873696F 		.ascii	"hsiomShift\000"
 1958      6D536869 
 1958      667400
 1959              	.LASF27:
 1960 04ca 7265736F 		.ascii	"resolution\000"
 1960      6C757469 
 1960      6F6E00
 1961              	.LASF61:
 1962 04d5 77646774 		.ascii	"wdgtList\000"
 1962      4C697374 
 1962      00
 1963              	.LASF104:
 1964 04de 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 1964      656E7365 
 1964      5F637572 
 1964      52616D53 
 1964      6E735074 
 1965              	.LASF14:
 1966 04f4 63686172 		.ascii	"char\000"
 1966      00
 1967              	.LASF70:
 1968 04f9 64725074 		.ascii	"drPtr\000"
 1968      7200
 1969              	.LASF36:
 1970 04ff 736E7343 		.ascii	"snsClk\000"
 1970      6C6B00
 1971              	.LASF40:
 1972 0506 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 1972      656E7365 
 1972      5F52414D 
 1972      5F57445F 
 1972      42415345 
 1973              	.LASF96:
 1974 0522 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1974      656E7365 
 1974      5F435344 
 1974      506F7374 
 1974      53696E67 
 1975              	.LASF32:
 1976 053d 6F6E4465 		.ascii	"onDebounce\000"
 1976      626F756E 
 1976      636500
 1977              	.LASF108:
 1978 0548 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 1978      656E7365 
 1978      5F537350 
 1978      6F737441 
 1978      6C6C5769 
 1979              	.LASF48:
 1980 0566 69646163 		.ascii	"idacComp\000"
 1980      436F6D70 
 1980      00
 1981              	.LASF47:
 1982 056f 6E656742 		.ascii	"negBslnRstCnt\000"
 1982      736C6E52 
 1982      7374436E 
 1982      7400
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 56


 1983              	.LASF84:
 1984 057d 746F7461 		.ascii	"totalNumSns\000"
 1984      6C4E756D 
 1984      536E7300 
 1985              	.LASF82:
 1986 0589 70747232 		.ascii	"ptr2DebounceArr\000"
 1986      4465626F 
 1986      756E6365 
 1986      41727200 
 1987              	.LASF90:
 1988 0599 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1988      656E7365 
 1988      5F464C41 
 1988      53485F53 
 1988      54525543 
 1989              	.LASF77:
 1990 05af 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1990      656E7365 
 1990      5F464C41 
 1990      53485F49 
 1990      4F5F5354 
 1991              	.LASF55:
 1992 05c8 73746174 		.ascii	"status\000"
 1992      757300
 1993              	.LASF89:
 1994 05cf 77646774 		.ascii	"wdgtArray\000"
 1994      41727261 
 1994      7900
 1995              	.LASF42:
 1996 05d9 62757430 		.ascii	"but0\000"
 1996      00
 1997              	.LASF112:
 1998 05de 63757253 		.ascii	"curSnsIOPtr\000"
 1998      6E73494F 
 1998      50747200 
 1999              	.LASF37:
 2000 05ea 736E7343 		.ascii	"snsClkSource\000"
 2000      6C6B536F 
 2000      75726365 
 2000      00
 2001              	.LASF28:
 2002 05f7 66696E67 		.ascii	"fingerTh\000"
 2002      65725468 
 2002      00
 2003              	.LASF19:
 2004 0600 70617261 		.ascii	"param0\000"
 2004      6D3000
 2005              	.LASF69:
 2006 0607 70635074 		.ascii	"pcPtr\000"
 2006      7200
 2007              	.LASF43:
 2008 060d 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 2008      656E7365 
 2008      5F52414D 
 2008      5F57445F 
 2008      4C495354 
 2009              	.LASF65:
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccE8HUvn.s 			page 57


 2010 0629 736E7254 		.ascii	"snrTestScanCounter\000"
 2010      65737453 
 2010      63616E43 
 2010      6F756E74 
 2010      657200
 2011              	.LASF72:
 2012 063c 6873696F 		.ascii	"hsiomMask\000"
 2012      6D4D6173 
 2012      6B00
 2013              	.LASF92:
 2014 0646 746D704D 		.ascii	"tmpMaxCount\000"
 2014      6178436F 
 2014      756E7400 
 2015              	.LASF109:
 2016 0652 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2016      4320342E 
 2016      392E3320 
 2016      32303135 
 2016      30333033 
 2017 0685 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 2017      20726576 
 2017      6973696F 
 2017      6E203232 
 2017      31323230 
 2018 06b8 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2018      67202D66 
 2018      66756E63 
 2018      74696F6E 
 2018      2D736563 
 2019              	.LASF29:
 2020 06e4 6E6F6973 		.ascii	"noiseTh\000"
 2020      65546800 
 2021              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
