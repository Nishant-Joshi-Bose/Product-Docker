////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file      BootupFactoryDefaultManager.h
/// @brief     This source code file declares a Bootup Factory Default manager class for implementing the triggering of
///            Factory Defautlt soon after boot based on key actions.
/// @author    Yishai Sered
////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
///            Included Header Files
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "IntentManager.h"
#include "Intents.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
///                          Start of the Product Application Namespace                          ///
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace ProductApp
{
class CustomProductController;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @class BootupFactoryDefaultManager
/// @brief This class provides functionality to implement rating management.
////////////////////////////////////////////////////////////////////////////////////////////////////
class BootupFactoryDefaultManager : public IntentManager
{
public:

    ////////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief Constructor for the BootupFactoryDefaultManager Class
    /// @param NotifyTargetTaskIF&         task
    /// @param const CliClientMT&          commandLineClient
    /// @param const FrontDoorClientIF_t&  frontDoorClient
    /// @param CustomProductController&    productController
    ////////////////////////////////////////////////////////////////////////////////////////////////
    BootupFactoryDefaultManager( NotifyTargetTaskIF&        task,
                                 const CliClientMT&         commandLineClient,
                                 const FrontDoorClientIF_t& frontDoorClient,
                                 ProductController&         productController );


    ~BootupFactoryDefaultManager( ) override
    {

    }

    //////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief  The following method is used to handle key actions
    //////////////////////////////////////////////////////////////////////////////////////////////
    bool Handle( KeyHandlerUtil::ActionType_t& action ) override;

private:
    CustomProductController&                m_productController;
    int64_t                                 m_bootupFactoryDefaultKeyTime   = 0;
};

////////////////////////////////////////////////////////////////////////////////////////////////////
///                           End of the Product Application Namespace                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                         End of File                                          ///
////////////////////////////////////////////////////////////////////////////////////////////////////
