////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// @file      CustomProductControllerStateAdaptIQCancelling.h
///
/// @brief     This source code file contains functionality to process events that occur when the
///            product is cancelling AdaptIQ.
///
/// @attention Copyright (C) 2017 Bose Corporation All Rights Reserved
///
///            Bose Corporation
///            The Mountain Road,
///            Framingham, MA 01701-9168
///            U.S.A.
///
///            This program may not be reproduced, in whole or in part, in any form by any means
///            whatsoever without the written permission of Bose Corporation.
///
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// The following compiler directive prevents this header file from being included more than once,
/// which may cause multiple declaration compiler errors.
///
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///            Included Header Files
///
////////////////////////////////////////////////////////////////////////////////////////////////////
#include <string>
#include "ProductControllerStateIdle.h"
#include "LpmServiceMessages.pb.h"
#include "APTimer.h"
#include "ProductAdaptIQManager.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
///                            Start of Product Application Namespace                            ///
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace ProductApp
{

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///            Forward Class Declarations
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class ProductControllerHsm;
class CustomProductController;

////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// @class CustomProductControllerStateAdaptIQCancelling
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class CustomProductControllerStateAdaptIQCancelling : public ProductControllerState
{
public:

    CustomProductControllerStateAdaptIQCancelling( ProductControllerHsm& hsm,
                                                   CHsmState*            pSuperState,
                                                   Hsm::STATE            stateId,
                                                   const std::string&    name = "AdaptIQCancelling" );

    ~CustomProductControllerStateAdaptIQCancelling( ) override
    {

    }

    void HandleStateStart( ) override;
    void HandleStateExit( )  override;
    bool HandleAdaptIQStatus( const ProductAdaptIQStatus& aiqStatus ) override;
    bool HandleIntentSpeakerPairing( KeyHandlerUtil::ActionType_t intent )  override;
    bool HandleDspBooted( const LpmServiceMessages::IpcDeviceBoot_t& dspBooted ) override;
    bool HandleIntentVolumeControl( KeyHandlerUtil::ActionType_t intent )       override;
    bool HandleIntentMuteControl( KeyHandlerUtil::ActionType_t intent )         override;

private:


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    /// @brief CustomProductControllerStateAdaptIQ::HardwareIface
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    std::shared_ptr<CustomProductLpmHardwareInterface>& HardwareIface( );
};

////////////////////////////////////////////////////////////////////////////////////////////////////
///                             End of Product Application Namespace                             ///
////////////////////////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                        End of File                                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
