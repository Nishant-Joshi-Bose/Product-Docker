////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file      CustomProductControllerStatePlayingSelectedSetup.h
///
/// @brief     This header file declares functionality to process custom events that occur
///            during the product setup state.
///
/// @attention Copyright (C) 2018 Bose Corporation All Rights Reserved
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
///            Included Header Files
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once
#include "ProductControllerStatePlayingSelectedSetup.h"
#include "HsmState.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
///                            Start of Product Application Namespace                            ///
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace ProductApp
{

////////////////////////////////////////////////////////////////////////////////////////////////////
///            Forward Class Declarations
////////////////////////////////////////////////////////////////////////////////////////////////////
class ProductControllerHsm;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief The CustomProductControllerStatePlayingSelectedSetup Class
////////////////////////////////////////////////////////////////////////////////////////////////////
class CustomProductControllerStatePlayingSelectedSetup : public ProductControllerStatePlayingSelectedSetup
{
public:

    CustomProductControllerStatePlayingSelectedSetup( ProductControllerHsm& hsm,
                                                      CHsmState*            pSuperState,
                                                      Hsm::STATE            stateId,
                                                      const std::string&    name = "CustomSetup" );

    ~CustomProductControllerStatePlayingSelectedSetup( ) override
    {

    }

    void HandleStateEnter() override;
    void HandleStateExit() override;
    bool HandleIntentMuteControl( KeyHandlerUtil::ActionType_t intent ) override;
};

////////////////////////////////////////////////////////////////////////////////////////////////////
///                           End of the Product Application Namespace                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                         End of File                                          ///
////////////////////////////////////////////////////////////////////////////////////////////////////
