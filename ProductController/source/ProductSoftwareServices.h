////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// @file      ProductSoftwareServices.h
///
/// @brief     This header file contains declarations for managing software services through the
///            Audio for Video server.
///
/// @author    Stuart J. Lumby
///
/// @attention Copyright (C) 2017 Bose Corporation All Rights Reserved
///
///            Bose Corporation
///            The Mountain Road,
///            Framingham, MA 01701-9168
///            U.S.A.
///
///            This program may not be reproduced, in whole or in part, in any form by any means
///            whatsoever without the written permission of Bose Corporation.
///
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// The following compiler directive prevents this header file from being included more than
/// once, which will cause multiple declaration compiler errors, in any file that includes it.
///
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///            Included Header Files
///
////////////////////////////////////////////////////////////////////////////////////////////////////
#include "Utilities.h"
#include "BoseLinkServerMsgReboot.pb.h"
#include "ProductMessage.pb.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
///                          Start of the Product Application Namespace                          ///
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace ProductApp
{
////////////////////////////////////////////////////////////////////////////////////////////////////
///
///            Forward Class Declarations
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class ProductHardwareInterface;
class ProfessorProductController;

////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// @class ProductSoftwareServices
///
/// @brief This class is used for managing software services through the Audio for Video server.
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class ProductSoftwareServices
{
public:

    //////////////////////////////////////////////////////////////////////////////////////////////
    ///
    /// @name   ProductSoftwareServices Constructor
    ///
    /// @param  ProfessorProductController& ProductController
    ///
    //////////////////////////////////////////////////////////////////////////////////////////////
    ProductSoftwareServices( ProfessorProductController& ProductController );

    //////////////////////////////////////////////////////////////////////////////////////////////
    ///
    /// @brief  The following public methods are used to run and stop instances of the
    ///         ProductSoftwareServices class, respectively.
    ///
    //////////////////////////////////////////////////////////////////////////////////////////////
    void Run( );
    void Stop( );

    //////////////////////////////////////////////////////////////////////////////////////////////
    ///
    /// @brief  This declaration is used to handle reboot requests as a software service.
    ///
    //////////////////////////////////////////////////////////////////////////////////////////////
    void SendRebootRequest( unsigned int delay );

private:

    //////////////////////////////////////////////////////////////////////////////////////////////
    ///
    /// @brief The following declarations are used to interface with the product controller and
    ///        the lower level LPM hardware.
    ///
    //////////////////////////////////////////////////////////////////////////////////////////////
    NotifyTargetTaskIF*                         m_ProductTask;
    Callback< ProductMessage >                  m_ProductNotify;
    std::shared_ptr< ProductHardwareInterface > m_ProductHardwareInterface;

    //////////////////////////////////////////////////////////////////////////////////////////////
    ///
    /// @brief These declarations are used for handling software reboot request by system
    ///        application clients.
    ///
    //////////////////////////////////////////////////////////////////////////////////////////////
    ServerListener m_serverListener;

    void RegisterForRebootRequests( );
    void AcceptClient( ServerSocket client );
    void HandleClientDisconnect( );
    void SendRebootRequestHandler( BoseLinkServerMsgReboot rebootRequest );
};

////////////////////////////////////////////////////////////////////////////////////////////////////
///                           End of the Product Application Namespace                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                         End of File                                          ///
////////////////////////////////////////////////////////////////////////////////////////////////////
