syntax = "proto2";

package KeyActionPb;

enum KEY_ACTION
{
    // This enumeration starts at 1; since the CastleKeyHandler appears to reserve action for 0.
    KEY_ACTION_POWER                    = 1;
    KEY_ACTION_SOURCE                   = 2;
    KEY_ACTION_PRESET_1                 = 3;
    KEY_ACTION_PRESET_2                 = 4;
    KEY_ACTION_PRESET_3                 = 5;
    KEY_ACTION_PRESET_4                 = 6;
    KEY_ACTION_PRESET_5                 = 7;
    KEY_ACTION_PRESET_6                 = 8;
    KEY_ACTION_PLAY_PAUSE               = 9;
    KEY_ACTION_SKIP_FORWARD             = 10;
    KEY_ACTION_SKIP_BACK                = 11;
    KEY_ACTION_MUTE                     = 12;
    KEY_ACTION_SOUNDTOUCH               = 13;
    KEY_ACTION_CONNECT                  = 14;
    KEY_ACTION_ACTION                   = 15;
    KEY_ACTION_TV                       = 16;
    KEY_ACTION_THUMB_UP                 = 17;
    KEY_ACTION_THUMB_DOWN               = 18;
    KEY_ACTION_FACTORY_DEFAULT          = 19;
    KEY_ACTION_WIFI_OFF                 = 20;
    KEY_ACTION_AP_SETUP                 = 21;
    KEY_ACTION_PAIR_SPEAKERS            = 22;
    // this seems redundant, but the keyhandler component will detect multiple entries with the same
    // key+action combination as duplicate entries (even though the timeouts may be different)
    KEY_ACTION_VOLUME_UP_1              = 23;
    KEY_ACTION_VOLUME_UP_2              = 24;
    KEY_ACTION_VOLUME_UP_3              = 25;
    KEY_ACTION_VOLUME_DOWN_1            = 26;
    KEY_ACTION_VOLUME_DOWN_2            = 27;
    KEY_ACTION_VOLUME_DOWN_3            = 28;
}

