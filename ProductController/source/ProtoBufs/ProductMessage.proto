////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// @file      ProductMessage.proto
///
/// @brief     This header file declares a Protocol Buffer for creating messages to send as events
///            to the Product Controller state machine.
///
/// @author    Stuart J. Lumby
///
/// @attention Copyright (C) 2017 Bose Corporation All Rights Reserved
///
///            Bose Corporation
///            The Mountain Road,
///            Framingham, MA 01701-9168
///            U.S.A.
///
///            This program may not be reproduced, in whole or in part, in any form by any means
///            whatsoever without the written permission of Bose Corporation.
///
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                Common Protocol Buffer Include                                ///
////////////////////////////////////////////////////////////////////////////////////////////////////
import "CommonProductMessages.proto";

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                LPM Service Protocol Buffer Include                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
import "AutoLpmServiceMessages.proto";

////////////////////////////////////////////////////////////////////////////////////////////////////
///                       AdaptIQ Status (from DSP) Message Structure
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductAdaptIQStatus
{
        optional LpmServiceMessages.IpcAiqSetupStatus_t     status  = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                       AdaptIQ Control (from FrontDoor) Message Structure
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductAdaptIQControl
{
        enum AdaptIQAction
        {
            Start       = 1;
            Cancel      = 2;
            Advance     = 3;
            Previous    = 4;
        }
        optional AdaptIQAction action = 1; 
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                             Product Accessory Pairing Structure                              ///
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductAccessoryPairing
{
        optional bool active = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                Base Product Message Structure                                ///
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductMessage
{
        optional ProductLpmStatus           lpmstatus           =  1;
        optional ProductCapsStatus          capsstatus          =  2;
        optional ProductAudioPathStatus     audiopathstatus     =  3;
        optional ProductSTSInterfaceStatus  stsinterfacestatus  =  4;
        optional ProductSelectSourceSlot    selectsourceslot    =  5;
        optional ProductNetworkStatus       networkstatus       =  6;
        optional ProductWirelessStatus      wirelessstatus      =  7;
        optional ProductVoiceStatus         voicestatus         =  8;
        optional uint32                     action              =  9;
        optional ProductLanguageData        languagedata        = 10;
        optional ProductConfigurationStatus configurationstatus = 11;
        optional ProductAutowakeStatus      autowakestatus      = 12;
        optional ProductNowPlayingStatus    nowplayingstatus    = 13;
        optional ProductAccessoryPairing    accessorypairing    = 14;
        optional ProductAdaptIQStatus       aiqstatus           = 15;
        optional ProductAdaptIQControl      aiqcontrol          = 16;
        optional ProductLpmLowPowerStatus   lpmlowpowerstatus   = 17;
        optional bool                       audiopathselect     = 18;
        optional bool                       ampfaultdetected    = 19;
        optional bool                       audiosilent         = 20;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                        End of File                                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
