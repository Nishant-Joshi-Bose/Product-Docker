////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// @file      ProductMessage.proto
///
/// @brief     This header file declares a Protocol Buffer for creating messages to send as events
///            to the Product Controller state machine.
///
/// @author    Stuart J. Lumby
///
/// @attention Copyright (C) 2017 Bose Corporation All Rights Reserved
///
///            Bose Corporation
///            The Mountain Road,
///            Framingham, MA 01701-9168
///            U.S.A.
///
///            This program may not be reproduced, in whole or in part, in any form by any means
///            whatsoever without the written permission of Bose Corporation.
///
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                Common Protocol Buffer Include                                ///
////////////////////////////////////////////////////////////////////////////////////////////////////
import "CommonProductMessages.proto";

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                LPM Service Protocol Buffer Include                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
import "AutoLpmServiceMessages.proto";

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                Speaker Manager Accessory Paring Protocol Buffer Include      ///
////////////////////////////////////////////////////////////////////////////////////////////////////
import "ProductSpeakerManager.proto";

////////////////////////////////////////////////////////////////////////////////////////////////////
///                       AdaptIQ Status (from DSP) Message Structure
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductAdaptIQStatus
{
        optional LpmServiceMessages.IpcAiqSetupStatus_t     status  = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                       AdaptIQ Control (from FrontDoor) Message Structure
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductAdaptIQControl
{
        enum AdaptIQAction
        {
            Start       = 1;
            Cancel      = 2;
            Advance     = 3;
            Previous    = 4;
        }
        optional AdaptIQAction action = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                       CecMode (from FrontDoor) Message Structure
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductCecMode
{
        enum CecModeValue
        {
            OFF       = 0;
            ON        = 1;
            ALTERNATE_ON = 2;
        }
        optional CecModeValue cecmode = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                             Product Accessory Pairing Structure                              ///
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                Base Product Message Structure                                ///
////////////////////////////////////////////////////////////////////////////////////////////////////
message ProductMessage
{
        optional ProductLpmStatus                           lpmstatus                   =  1;
        optional ProductCapsStatus                          capsstatus                  =  2;
        optional ProductAudioPathStatus                     audiopathstatus             =  3;
        optional ProductSTSInterfaceStatus                  stsinterfacestatus          =  4;
        optional ProductSelectSourceSlot                    selectsourceslot            =  5;
        optional ProductNetworkStatus                       networkstatus               =  6;
        optional ProductWirelessStatus                      wirelessstatus              =  7;
        optional ProductVoiceStatus                         voicestatus                 =  8;
        optional uint32                                     action                      =  9;
        optional ProductLanguageData                        languagedata                = 10;
        optional ProductAutowakeStatus                      autowakestatus              = 11;
        optional ProductNowPlayingStatus                    nowplayingstatus            = 12;
        optional ProductPb.AccessorySpeakerState            accessorypairing            = 13;
        optional ProductAdaptIQStatus                       aiqstatus                   = 14;
        optional ProductAdaptIQControl                      aiqcontrol                  = 15;
        optional ProductLpmLowPowerStatus                   lpmlowpowerstatus           = 16;
        optional bool                                       audiopathselect             = 17;
        optional bool                                       ampfaultdetected            = 18;
        optional bool                                       audiosilent                 = 19;
        optional ProductCecMode                             cecmode                     = 20;
        optional ProductSystemEventServiceResponse          systemeventserviceresponse  = 21;
        optional uint32                                     chimetoplay                 = 22;
        optional LpmServiceMessages.IpcKeyInformation_t     keyevent                    = 23;
        optional bool                                       softwareinstall             = 24;
        optional bool                                       softwareupdatestatus        = 25;
        optional bool                                       accessoriesareknown         = 26;
        optional ProductPb.AccessoriesPlayTonesRequest      accessoriesplaytones        = 27;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
///                                        End of File                                           ///
////////////////////////////////////////////////////////////////////////////////////////////////////
