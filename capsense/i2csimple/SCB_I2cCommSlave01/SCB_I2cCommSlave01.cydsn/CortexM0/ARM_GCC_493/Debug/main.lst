ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	i2cReadBuffer
  18              		.data
  19              		.align	2
  20              		.type	i2cReadBuffer, %object
  21              		.size	i2cReadBuffer, 3
  22              	i2cReadBuffer:
  23 0000 01       		.byte	1
  24 0001 FF       		.byte	-1
  25 0002 17       		.byte	23
  26              		.comm	i2cWriteBuffer,3,4
  27 0003 00       		.section	.text.main,"ax",%progbits
  28              		.align	2
  29              		.global	main
  30              		.code	16
  31              		.thumb_func
  32              		.type	main, %function
  33              	main:
  34              	.LFB34:
  35              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project demonstrates the basic operation of the I2C slave
   8:main.c        **** *  (SCB mode) component. The I2C slave accepts a packet with a command from
   9:main.c        **** *  the I2C master to control the RGB LED color. The I2C slave updates its
  10:main.c        **** *  buffer with a status packet in response to the accepted command.
  11:main.c        **** *  For more information refer to the example project datasheet.
  12:main.c        **** *
  13:main.c        **** ********************************************************************************
  14:main.c        **** * Copyright 2014-2015, Cypress Semiconductor Corporation. All rights reserved.
  15:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  16:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  17:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  18:main.c        **** * accompanying the software package from which you obtained this software.
  19:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  20:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  21:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  22:main.c        **** *******************************************************************************/
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 2


  23:main.c        **** 
  24:main.c        **** #include <main.h>
  25:main.c        **** 
  26:main.c        **** /* I2C slave read and write buffers */
  27:main.c        **** uint8 i2cReadBuffer [BUFFER_SIZE] = {PACKET_SOP, STS_CMD_FAIL, PACKET_EOP};
  28:main.c        **** uint8 i2cWriteBuffer[BUFFER_SIZE];
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** /*******************************************************************************
  32:main.c        **** * Function Name: main
  33:main.c        **** ********************************************************************************
  34:main.c        **** * Summary:
  35:main.c        **** *  Main function performs following actions:
  36:main.c        **** *   1. Turns off status RGB LED
  37:main.c        **** *   2. Sets up I2C slave write and read buffers.
  38:main.c        **** *   3. Starts I2C slave (SCB mode) component.
  39:main.c        **** *   4. Enables global interrupts.
  40:main.c        **** *   5. Waits for command from the I2C master to control the RGB LED.
  41:main.c        **** *
  42:main.c        **** * Parameters:
  43:main.c        **** *  None
  44:main.c        **** *
  45:main.c        **** * Return:
  46:main.c        **** *  None
  47:main.c        **** *
  48:main.c        **** *******************************************************************************/
  49:main.c        **** int main()
  50:main.c        **** {
  36              		.loc 1 50 0
  37              		.cfi_startproc
  38 0000 90B5     		push	{r4, r7, lr}
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              		.cfi_def_cfa_offset 24
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  51:main.c        ****     uint8 status = STS_CMD_FAIL;
  47              		.loc 1 51 0
  48 0006 FB1D     		add	r3, r7, #7
  49 0008 FF22     		mov	r2, #255
  50 000a 1A70     		strb	r2, [r3]
  52:main.c        **** 
  53:main.c        ****     RGB_LED_OFF;
  51              		.loc 1 53 0
  52 000c 0120     		mov	r0, #1
  53 000e FFF7FEFF 		bl	LED_RED_Write
  54 0012 0120     		mov	r0, #1
  55 0014 FFF7FEFF 		bl	LED_GREEN_Write
  56 0018 0120     		mov	r0, #1
  57 001a FFF7FEFF 		bl	LED_BLUE_Write
  54:main.c        **** 
  55:main.c        ****     /* Start I2C slave (SCB mode) */
  56:main.c        ****     I2CS_I2CSlaveInitReadBuf (i2cReadBuffer,  BUFFER_SIZE);
  58              		.loc 1 56 0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 3


  59 001e 1F4B     		ldr	r3, .L6
  60 0020 181C     		mov	r0, r3
  61 0022 0321     		mov	r1, #3
  62 0024 FFF7FEFF 		bl	I2CS_I2CSlaveInitReadBuf
  57:main.c        ****     I2CS_I2CSlaveInitWriteBuf(i2cWriteBuffer, BUFFER_SIZE);
  63              		.loc 1 57 0
  64 0028 1D4B     		ldr	r3, .L6+4
  65 002a 181C     		mov	r0, r3
  66 002c 0321     		mov	r1, #3
  67 002e FFF7FEFF 		bl	I2CS_I2CSlaveInitWriteBuf
  58:main.c        ****     I2CS_Start();
  68              		.loc 1 58 0
  69 0032 FFF7FEFF 		bl	I2CS_Start
  59:main.c        **** 
  60:main.c        ****     CyGlobalIntEnable;
  70              		.loc 1 60 0
  71              	@ 60 "main.c" 1
  72 0036 62B6     		CPSIE   i
  73              	@ 0 "" 2
  74              		.code	16
  75              	.L5:
  61:main.c        **** 
  62:main.c        ****     /***************************************************************************
  63:main.c        ****     * Main polling loop
  64:main.c        ****     ***************************************************************************/
  65:main.c        ****     for (;;)
  66:main.c        ****     {
  67:main.c        ****         /* Write complete: parse command packet */
  68:main.c        ****         if (0u != (I2CS_I2CSlaveStatus() & I2CS_I2C_SSTAT_WR_CMPLT))
  76              		.loc 1 68 0
  77 0038 FFF7FEFF 		bl	I2CS_I2CSlaveStatus
  78 003c 021C     		mov	r2, r0
  79 003e 1023     		mov	r3, #16
  80 0040 1340     		and	r3, r2
  81 0042 1FD0     		beq	.L2
  69:main.c        ****         {
  70:main.c        ****             /* Check packet length */
  71:main.c        ****             if (PACKET_SIZE == I2CS_I2CSlaveGetWriteBufSize())
  82              		.loc 1 71 0
  83 0044 FFF7FEFF 		bl	I2CS_I2CSlaveGetWriteBufSize
  84 0048 031E     		sub	r3, r0, #0
  85 004a 032B     		cmp	r3, #3
  86 004c 0FD1     		bne	.L3
  72:main.c        ****             {
  73:main.c        ****                 /* Check start and end of packet markers */
  74:main.c        ****                 if ((i2cWriteBuffer[PACKET_SOP_POS] == PACKET_SOP) &&
  87              		.loc 1 74 0
  88 004e 144B     		ldr	r3, .L6+4
  89 0050 1B78     		ldrb	r3, [r3]
  90 0052 012B     		cmp	r3, #1
  91 0054 0BD1     		bne	.L3
  75:main.c        ****                     (i2cWriteBuffer[PACKET_EOP_POS] == PACKET_EOP))
  92              		.loc 1 75 0 discriminator 1
  93 0056 124B     		ldr	r3, .L6+4
  94 0058 9B78     		ldrb	r3, [r3, #2]
  74:main.c        ****                     (i2cWriteBuffer[PACKET_EOP_POS] == PACKET_EOP))
  95              		.loc 1 74 0 discriminator 1
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 4


  96 005a 172B     		cmp	r3, #23
  97 005c 07D1     		bne	.L3
  76:main.c        ****                 {
  77:main.c        ****                     status = ExecuteCommand(i2cWriteBuffer[PACKET_CMD_POS]);
  98              		.loc 1 77 0
  99 005e 104B     		ldr	r3, .L6+4
 100 0060 5B78     		ldrb	r3, [r3, #1]
 101 0062 FC1D     		add	r4, r7, #7
 102 0064 181C     		mov	r0, r3
 103 0066 FFF7FEFF 		bl	ExecuteCommand
 104 006a 031C     		mov	r3, r0
 105 006c 2370     		strb	r3, [r4]
 106              	.L3:
  78:main.c        ****                 }
  79:main.c        ****             }
  80:main.c        **** 
  81:main.c        ****             /* Clear slave write buffer and status */
  82:main.c        ****             I2CS_I2CSlaveClearWriteBuf();
 107              		.loc 1 82 0
 108 006e FFF7FEFF 		bl	I2CS_I2CSlaveClearWriteBuf
  83:main.c        ****             (void) I2CS_I2CSlaveClearWriteStatus();
 109              		.loc 1 83 0
 110 0072 FFF7FEFF 		bl	I2CS_I2CSlaveClearWriteStatus
  84:main.c        **** 
  85:main.c        ****             /* Update read buffer */
  86:main.c        ****             i2cReadBuffer[PACKET_STS_POS] = status;
 111              		.loc 1 86 0
 112 0076 094B     		ldr	r3, .L6
 113 0078 FA1D     		add	r2, r7, #7
 114 007a 1278     		ldrb	r2, [r2]
 115 007c 5A70     		strb	r2, [r3, #1]
  87:main.c        ****             status = STS_CMD_FAIL;
 116              		.loc 1 87 0
 117 007e FB1D     		add	r3, r7, #7
 118 0080 FF22     		mov	r2, #255
 119 0082 1A70     		strb	r2, [r3]
 120              	.L2:
  88:main.c        ****         }
  89:main.c        **** 
  90:main.c        ****         /* Read complete: expose buffer to master */
  91:main.c        ****         if (0u != (I2CS_I2CSlaveStatus() & I2CS_I2C_SSTAT_RD_CMPLT))
 121              		.loc 1 91 0
 122 0084 FFF7FEFF 		bl	I2CS_I2CSlaveStatus
 123 0088 021C     		mov	r2, r0
 124 008a 0123     		mov	r3, #1
 125 008c 1340     		and	r3, r2
 126 008e 03D0     		beq	.L4
  92:main.c        ****         {
  93:main.c        ****             /* Clear slave read buffer and status */
  94:main.c        ****             I2CS_I2CSlaveClearReadBuf();
 127              		.loc 1 94 0
 128 0090 FFF7FEFF 		bl	I2CS_I2CSlaveClearReadBuf
  95:main.c        ****             (void) I2CS_I2CSlaveClearReadStatus();
 129              		.loc 1 95 0
 130 0094 FFF7FEFF 		bl	I2CS_I2CSlaveClearReadStatus
 131              	.L4:
  96:main.c        ****         }
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 5


  97:main.c        ****     }
 132              		.loc 1 97 0
 133 0098 CEE7     		b	.L5
 134              	.L7:
 135 009a C046     		.align	2
 136              	.L6:
 137 009c 00000000 		.word	i2cReadBuffer
 138 00a0 00000000 		.word	i2cWriteBuffer
 139              		.cfi_endproc
 140              	.LFE34:
 141              		.size	main, .-main
 142              		.section	.text.ExecuteCommand,"ax",%progbits
 143              		.align	2
 144              		.global	ExecuteCommand
 145              		.code	16
 146              		.thumb_func
 147              		.type	ExecuteCommand, %function
 148              	ExecuteCommand:
 149              	.LFB35:
  98:main.c        **** }
  99:main.c        **** 
 100:main.c        **** 
 101:main.c        **** /*******************************************************************************
 102:main.c        **** * Function Name: ExecuteCommand
 103:main.c        **** ********************************************************************************
 104:main.c        **** * Summary:
 105:main.c        **** *  Executes received command to control the LED color and returns status.
 106:main.c        **** *  If the command is unknown, the LED color is not changed.
 107:main.c        **** *
 108:main.c        **** * Parameters:
 109:main.c        **** *  cmd: command to execute. Available commands:
 110:main.c        **** *   - CMD_SET_RED:   set red color of the LED.
 111:main.c        **** *   - CMD_SET_GREEN: set green color of the LED.
 112:main.c        **** *   - CMD_SET_BLUE:  set blue color of the LED.
 113:main.c        **** *   - CMD_SET_OFF:   turn off the LED.
 114:main.c        **** *
 115:main.c        **** * Return:
 116:main.c        **** *  Returns status of command execution. There are two statuses
 117:main.c        **** *  - STS_CMD_DONE: command is executed successfully.
 118:main.c        **** *  - STS_CMD_FAIL: unknown command
 119:main.c        **** *
 120:main.c        **** *******************************************************************************/
 121:main.c        **** uint8 ExecuteCommand(uint32 cmd)
 122:main.c        **** {
 150              		.loc 1 122 0
 151              		.cfi_startproc
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 84B0     		sub	sp, sp, #16
 157              		.cfi_def_cfa_offset 24
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 123:main.c        ****     uint8 status;
 124:main.c        **** 
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 6


 125:main.c        ****     status = STS_CMD_DONE;
 161              		.loc 1 125 0
 162 0008 0F23     		mov	r3, #15
 163 000a FB18     		add	r3, r7, r3
 164 000c 0022     		mov	r2, #0
 165 000e 1A70     		strb	r2, [r3]
 126:main.c        **** 
 127:main.c        ****     LED_RED_Write  (cmd & 0x01);
 166              		.loc 1 127 0
 167 0010 7B68     		ldr	r3, [r7, #4]
 168 0012 DBB2     		uxtb	r3, r3
 169 0014 0122     		mov	r2, #1
 170 0016 1340     		and	r3, r2
 171 0018 DBB2     		uxtb	r3, r3
 172 001a 181C     		mov	r0, r3
 173 001c FFF7FEFF 		bl	LED_RED_Write
 128:main.c        ****     LED_GREEN_Write((cmd & 0x02) >> 1);
 174              		.loc 1 128 0
 175 0020 7B68     		ldr	r3, [r7, #4]
 176 0022 0222     		mov	r2, #2
 177 0024 1340     		and	r3, r2
 178 0026 5B08     		lsr	r3, r3, #1
 179 0028 DBB2     		uxtb	r3, r3
 180 002a 181C     		mov	r0, r3
 181 002c FFF7FEFF 		bl	LED_GREEN_Write
 129:main.c        ****     LED_BLUE_Write ((cmd & 0x04) >> 2);
 182              		.loc 1 129 0
 183 0030 7B68     		ldr	r3, [r7, #4]
 184 0032 0422     		mov	r2, #4
 185 0034 1340     		and	r3, r2
 186 0036 9B08     		lsr	r3, r3, #2
 187 0038 DBB2     		uxtb	r3, r3
 188 003a 181C     		mov	r0, r3
 189 003c FFF7FEFF 		bl	LED_BLUE_Write
 130:main.c        **** 
 131:main.c        ****     /* Execute received command */
 132:main.c        ****     /*
 133:main.c        ****     switch (cmd)
 134:main.c        ****     {
 135:main.c        ****         case CMD_SET_RED:
 136:main.c        ****             RGB_LED_ON_RED;
 137:main.c        ****             break;
 138:main.c        **** 
 139:main.c        ****         case CMD_SET_GREEN:
 140:main.c        ****             RGB_LED_ON_GREEN;
 141:main.c        ****             break;
 142:main.c        **** 
 143:main.c        ****         case CMD_SET_BLUE:
 144:main.c        ****             RGB_LED_ON_BLUE;
 145:main.c        ****             break;
 146:main.c        **** 
 147:main.c        ****         case CMD_SET_OFF:
 148:main.c        ****             RGB_LED_OFF;
 149:main.c        ****             break;
 150:main.c        **** 
 151:main.c        ****         default:
 152:main.c        ****             status = STS_CMD_FAIL;
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 7


 153:main.c        ****             break;
 154:main.c        ****     }
 155:main.c        **** */
 156:main.c        ****     return (status);
 190              		.loc 1 156 0
 191 0040 0F23     		mov	r3, #15
 192 0042 FB18     		add	r3, r7, r3
 193 0044 1B78     		ldrb	r3, [r3]
 157:main.c        **** }
 194              		.loc 1 157 0
 195 0046 181C     		mov	r0, r3
 196 0048 BD46     		mov	sp, r7
 197 004a 04B0     		add	sp, sp, #16
 198              		@ sp needed
 199 004c 80BD     		pop	{r7, pc}
 200              		.cfi_endproc
 201              	.LFE35:
 202              		.size	ExecuteCommand, .-ExecuteCommand
 203 004e C046     		.text
 204              	.Letext0:
 205              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 206              		.section	.debug_info,"",%progbits
 207              	.Ldebug_info0:
 208 0000 2C010000 		.4byte	0x12c
 209 0004 0400     		.2byte	0x4
 210 0006 00000000 		.4byte	.Ldebug_abbrev0
 211 000a 04       		.byte	0x4
 212 000b 01       		.uleb128 0x1
 213 000c C9000000 		.4byte	.LASF18
 214 0010 01       		.byte	0x1
 215 0011 22000000 		.4byte	.LASF19
 216 0015 64000000 		.4byte	.LASF20
 217 0019 00000000 		.4byte	.Ldebug_ranges0+0
 218 001d 00000000 		.4byte	0
 219 0021 00000000 		.4byte	.Ldebug_line0
 220 0025 02       		.uleb128 0x2
 221 0026 01       		.byte	0x1
 222 0027 06       		.byte	0x6
 223 0028 9C010000 		.4byte	.LASF0
 224 002c 02       		.uleb128 0x2
 225 002d 01       		.byte	0x1
 226 002e 08       		.byte	0x8
 227 002f 57010000 		.4byte	.LASF1
 228 0033 02       		.uleb128 0x2
 229 0034 02       		.byte	0x2
 230 0035 05       		.byte	0x5
 231 0036 AE010000 		.4byte	.LASF2
 232 003a 02       		.uleb128 0x2
 233 003b 02       		.byte	0x2
 234 003c 07       		.byte	0x7
 235 003d 89010000 		.4byte	.LASF3
 236 0041 02       		.uleb128 0x2
 237 0042 04       		.byte	0x4
 238 0043 05       		.byte	0x5
 239 0044 79010000 		.4byte	.LASF4
 240 0048 02       		.uleb128 0x2
 241 0049 04       		.byte	0x4
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 8


 242 004a 07       		.byte	0x7
 243 004b 3B000000 		.4byte	.LASF5
 244 004f 02       		.uleb128 0x2
 245 0050 08       		.byte	0x8
 246 0051 05       		.byte	0x5
 247 0052 00000000 		.4byte	.LASF6
 248 0056 02       		.uleb128 0x2
 249 0057 08       		.byte	0x8
 250 0058 07       		.byte	0x7
 251 0059 4D000000 		.4byte	.LASF7
 252 005d 03       		.uleb128 0x3
 253 005e 04       		.byte	0x4
 254 005f 05       		.byte	0x5
 255 0060 696E7400 		.ascii	"int\000"
 256 0064 02       		.uleb128 0x2
 257 0065 04       		.byte	0x4
 258 0066 07       		.byte	0x7
 259 0067 15000000 		.4byte	.LASF8
 260 006b 04       		.uleb128 0x4
 261 006c 35000000 		.4byte	.LASF9
 262 0070 02       		.byte	0x2
 263 0071 B901     		.2byte	0x1b9
 264 0073 2C000000 		.4byte	0x2c
 265 0077 04       		.uleb128 0x4
 266 0078 0E000000 		.4byte	.LASF10
 267 007c 02       		.byte	0x2
 268 007d BB01     		.2byte	0x1bb
 269 007f 48000000 		.4byte	0x48
 270 0083 02       		.uleb128 0x2
 271 0084 04       		.byte	0x4
 272 0085 04       		.byte	0x4
 273 0086 A8010000 		.4byte	.LASF11
 274 008a 02       		.uleb128 0x2
 275 008b 08       		.byte	0x8
 276 008c 04       		.byte	0x4
 277 008d 82010000 		.4byte	.LASF12
 278 0091 02       		.uleb128 0x2
 279 0092 01       		.byte	0x1
 280 0093 08       		.byte	0x8
 281 0094 65010000 		.4byte	.LASF13
 282 0098 02       		.uleb128 0x2
 283 0099 04       		.byte	0x4
 284 009a 07       		.byte	0x7
 285 009b C6010000 		.4byte	.LASF14
 286 009f 05       		.uleb128 0x5
 287 00a0 29000000 		.4byte	.LASF21
 288 00a4 01       		.byte	0x1
 289 00a5 31       		.byte	0x31
 290 00a6 5D000000 		.4byte	0x5d
 291 00aa 00000000 		.4byte	.LFB34
 292 00ae A4000000 		.4byte	.LFE34-.LFB34
 293 00b2 01       		.uleb128 0x1
 294 00b3 9C       		.byte	0x9c
 295 00b4 C7000000 		.4byte	0xc7
 296 00b8 06       		.uleb128 0x6
 297 00b9 2E000000 		.4byte	.LASF15
 298 00bd 01       		.byte	0x1
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 9


 299 00be 33       		.byte	0x33
 300 00bf 6B000000 		.4byte	0x6b
 301 00c3 02       		.uleb128 0x2
 302 00c4 91       		.byte	0x91
 303 00c5 6F       		.sleb128 -17
 304 00c6 00       		.byte	0
 305 00c7 07       		.uleb128 0x7
 306 00c8 6A010000 		.4byte	.LASF22
 307 00cc 01       		.byte	0x1
 308 00cd 79       		.byte	0x79
 309 00ce 6B000000 		.4byte	0x6b
 310 00d2 00000000 		.4byte	.LFB35
 311 00d6 4E000000 		.4byte	.LFE35-.LFB35
 312 00da 01       		.uleb128 0x1
 313 00db 9C       		.byte	0x9c
 314 00dc FD000000 		.4byte	0xfd
 315 00e0 08       		.uleb128 0x8
 316 00e1 636D6400 		.ascii	"cmd\000"
 317 00e5 01       		.byte	0x1
 318 00e6 79       		.byte	0x79
 319 00e7 77000000 		.4byte	0x77
 320 00eb 02       		.uleb128 0x2
 321 00ec 91       		.byte	0x91
 322 00ed 6C       		.sleb128 -20
 323 00ee 06       		.uleb128 0x6
 324 00ef 2E000000 		.4byte	.LASF15
 325 00f3 01       		.byte	0x1
 326 00f4 7B       		.byte	0x7b
 327 00f5 6B000000 		.4byte	0x6b
 328 00f9 02       		.uleb128 0x2
 329 00fa 91       		.byte	0x91
 330 00fb 77       		.sleb128 -9
 331 00fc 00       		.byte	0
 332 00fd 09       		.uleb128 0x9
 333 00fe 6B000000 		.4byte	0x6b
 334 0102 0D010000 		.4byte	0x10d
 335 0106 0A       		.uleb128 0xa
 336 0107 98000000 		.4byte	0x98
 337 010b 02       		.byte	0x2
 338 010c 00       		.byte	0
 339 010d 0B       		.uleb128 0xb
 340 010e B8010000 		.4byte	.LASF16
 341 0112 01       		.byte	0x1
 342 0113 1B       		.byte	0x1b
 343 0114 FD000000 		.4byte	0xfd
 344 0118 05       		.uleb128 0x5
 345 0119 03       		.byte	0x3
 346 011a 00000000 		.4byte	i2cReadBuffer
 347 011e 0B       		.uleb128 0xb
 348 011f BA000000 		.4byte	.LASF17
 349 0123 01       		.byte	0x1
 350 0124 1C       		.byte	0x1c
 351 0125 FD000000 		.4byte	0xfd
 352 0129 05       		.uleb128 0x5
 353 012a 03       		.byte	0x3
 354 012b 00000000 		.4byte	i2cWriteBuffer
 355 012f 00       		.byte	0
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 10


 356              		.section	.debug_abbrev,"",%progbits
 357              	.Ldebug_abbrev0:
 358 0000 01       		.uleb128 0x1
 359 0001 11       		.uleb128 0x11
 360 0002 01       		.byte	0x1
 361 0003 25       		.uleb128 0x25
 362 0004 0E       		.uleb128 0xe
 363 0005 13       		.uleb128 0x13
 364 0006 0B       		.uleb128 0xb
 365 0007 03       		.uleb128 0x3
 366 0008 0E       		.uleb128 0xe
 367 0009 1B       		.uleb128 0x1b
 368 000a 0E       		.uleb128 0xe
 369 000b 55       		.uleb128 0x55
 370 000c 17       		.uleb128 0x17
 371 000d 11       		.uleb128 0x11
 372 000e 01       		.uleb128 0x1
 373 000f 10       		.uleb128 0x10
 374 0010 17       		.uleb128 0x17
 375 0011 00       		.byte	0
 376 0012 00       		.byte	0
 377 0013 02       		.uleb128 0x2
 378 0014 24       		.uleb128 0x24
 379 0015 00       		.byte	0
 380 0016 0B       		.uleb128 0xb
 381 0017 0B       		.uleb128 0xb
 382 0018 3E       		.uleb128 0x3e
 383 0019 0B       		.uleb128 0xb
 384 001a 03       		.uleb128 0x3
 385 001b 0E       		.uleb128 0xe
 386 001c 00       		.byte	0
 387 001d 00       		.byte	0
 388 001e 03       		.uleb128 0x3
 389 001f 24       		.uleb128 0x24
 390 0020 00       		.byte	0
 391 0021 0B       		.uleb128 0xb
 392 0022 0B       		.uleb128 0xb
 393 0023 3E       		.uleb128 0x3e
 394 0024 0B       		.uleb128 0xb
 395 0025 03       		.uleb128 0x3
 396 0026 08       		.uleb128 0x8
 397 0027 00       		.byte	0
 398 0028 00       		.byte	0
 399 0029 04       		.uleb128 0x4
 400 002a 16       		.uleb128 0x16
 401 002b 00       		.byte	0
 402 002c 03       		.uleb128 0x3
 403 002d 0E       		.uleb128 0xe
 404 002e 3A       		.uleb128 0x3a
 405 002f 0B       		.uleb128 0xb
 406 0030 3B       		.uleb128 0x3b
 407 0031 05       		.uleb128 0x5
 408 0032 49       		.uleb128 0x49
 409 0033 13       		.uleb128 0x13
 410 0034 00       		.byte	0
 411 0035 00       		.byte	0
 412 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 11


 413 0037 2E       		.uleb128 0x2e
 414 0038 01       		.byte	0x1
 415 0039 3F       		.uleb128 0x3f
 416 003a 19       		.uleb128 0x19
 417 003b 03       		.uleb128 0x3
 418 003c 0E       		.uleb128 0xe
 419 003d 3A       		.uleb128 0x3a
 420 003e 0B       		.uleb128 0xb
 421 003f 3B       		.uleb128 0x3b
 422 0040 0B       		.uleb128 0xb
 423 0041 49       		.uleb128 0x49
 424 0042 13       		.uleb128 0x13
 425 0043 11       		.uleb128 0x11
 426 0044 01       		.uleb128 0x1
 427 0045 12       		.uleb128 0x12
 428 0046 06       		.uleb128 0x6
 429 0047 40       		.uleb128 0x40
 430 0048 18       		.uleb128 0x18
 431 0049 9642     		.uleb128 0x2116
 432 004b 19       		.uleb128 0x19
 433 004c 01       		.uleb128 0x1
 434 004d 13       		.uleb128 0x13
 435 004e 00       		.byte	0
 436 004f 00       		.byte	0
 437 0050 06       		.uleb128 0x6
 438 0051 34       		.uleb128 0x34
 439 0052 00       		.byte	0
 440 0053 03       		.uleb128 0x3
 441 0054 0E       		.uleb128 0xe
 442 0055 3A       		.uleb128 0x3a
 443 0056 0B       		.uleb128 0xb
 444 0057 3B       		.uleb128 0x3b
 445 0058 0B       		.uleb128 0xb
 446 0059 49       		.uleb128 0x49
 447 005a 13       		.uleb128 0x13
 448 005b 02       		.uleb128 0x2
 449 005c 18       		.uleb128 0x18
 450 005d 00       		.byte	0
 451 005e 00       		.byte	0
 452 005f 07       		.uleb128 0x7
 453 0060 2E       		.uleb128 0x2e
 454 0061 01       		.byte	0x1
 455 0062 3F       		.uleb128 0x3f
 456 0063 19       		.uleb128 0x19
 457 0064 03       		.uleb128 0x3
 458 0065 0E       		.uleb128 0xe
 459 0066 3A       		.uleb128 0x3a
 460 0067 0B       		.uleb128 0xb
 461 0068 3B       		.uleb128 0x3b
 462 0069 0B       		.uleb128 0xb
 463 006a 27       		.uleb128 0x27
 464 006b 19       		.uleb128 0x19
 465 006c 49       		.uleb128 0x49
 466 006d 13       		.uleb128 0x13
 467 006e 11       		.uleb128 0x11
 468 006f 01       		.uleb128 0x1
 469 0070 12       		.uleb128 0x12
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 12


 470 0071 06       		.uleb128 0x6
 471 0072 40       		.uleb128 0x40
 472 0073 18       		.uleb128 0x18
 473 0074 9642     		.uleb128 0x2116
 474 0076 19       		.uleb128 0x19
 475 0077 01       		.uleb128 0x1
 476 0078 13       		.uleb128 0x13
 477 0079 00       		.byte	0
 478 007a 00       		.byte	0
 479 007b 08       		.uleb128 0x8
 480 007c 05       		.uleb128 0x5
 481 007d 00       		.byte	0
 482 007e 03       		.uleb128 0x3
 483 007f 08       		.uleb128 0x8
 484 0080 3A       		.uleb128 0x3a
 485 0081 0B       		.uleb128 0xb
 486 0082 3B       		.uleb128 0x3b
 487 0083 0B       		.uleb128 0xb
 488 0084 49       		.uleb128 0x49
 489 0085 13       		.uleb128 0x13
 490 0086 02       		.uleb128 0x2
 491 0087 18       		.uleb128 0x18
 492 0088 00       		.byte	0
 493 0089 00       		.byte	0
 494 008a 09       		.uleb128 0x9
 495 008b 01       		.uleb128 0x1
 496 008c 01       		.byte	0x1
 497 008d 49       		.uleb128 0x49
 498 008e 13       		.uleb128 0x13
 499 008f 01       		.uleb128 0x1
 500 0090 13       		.uleb128 0x13
 501 0091 00       		.byte	0
 502 0092 00       		.byte	0
 503 0093 0A       		.uleb128 0xa
 504 0094 21       		.uleb128 0x21
 505 0095 00       		.byte	0
 506 0096 49       		.uleb128 0x49
 507 0097 13       		.uleb128 0x13
 508 0098 2F       		.uleb128 0x2f
 509 0099 0B       		.uleb128 0xb
 510 009a 00       		.byte	0
 511 009b 00       		.byte	0
 512 009c 0B       		.uleb128 0xb
 513 009d 34       		.uleb128 0x34
 514 009e 00       		.byte	0
 515 009f 03       		.uleb128 0x3
 516 00a0 0E       		.uleb128 0xe
 517 00a1 3A       		.uleb128 0x3a
 518 00a2 0B       		.uleb128 0xb
 519 00a3 3B       		.uleb128 0x3b
 520 00a4 0B       		.uleb128 0xb
 521 00a5 49       		.uleb128 0x49
 522 00a6 13       		.uleb128 0x13
 523 00a7 3F       		.uleb128 0x3f
 524 00a8 19       		.uleb128 0x19
 525 00a9 02       		.uleb128 0x2
 526 00aa 18       		.uleb128 0x18
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 13


 527 00ab 00       		.byte	0
 528 00ac 00       		.byte	0
 529 00ad 00       		.byte	0
 530              		.section	.debug_aranges,"",%progbits
 531 0000 24000000 		.4byte	0x24
 532 0004 0200     		.2byte	0x2
 533 0006 00000000 		.4byte	.Ldebug_info0
 534 000a 04       		.byte	0x4
 535 000b 00       		.byte	0
 536 000c 0000     		.2byte	0
 537 000e 0000     		.2byte	0
 538 0010 00000000 		.4byte	.LFB34
 539 0014 A4000000 		.4byte	.LFE34-.LFB34
 540 0018 00000000 		.4byte	.LFB35
 541 001c 4E000000 		.4byte	.LFE35-.LFB35
 542 0020 00000000 		.4byte	0
 543 0024 00000000 		.4byte	0
 544              		.section	.debug_ranges,"",%progbits
 545              	.Ldebug_ranges0:
 546 0000 00000000 		.4byte	.LFB34
 547 0004 A4000000 		.4byte	.LFE34
 548 0008 00000000 		.4byte	.LFB35
 549 000c 4E000000 		.4byte	.LFE35
 550 0010 00000000 		.4byte	0
 551 0014 00000000 		.4byte	0
 552              		.section	.debug_line,"",%progbits
 553              	.Ldebug_line0:
 554 0000 8A000000 		.section	.debug_str,"MS",%progbits,1
 554      02004100 
 554      00000201 
 554      FB0E0D00 
 554      01010101 
 555              	.LASF6:
 556 0000 6C6F6E67 		.ascii	"long long int\000"
 556      206C6F6E 
 556      6720696E 
 556      7400
 557              	.LASF10:
 558 000e 75696E74 		.ascii	"uint32\000"
 558      333200
 559              	.LASF8:
 560 0015 756E7369 		.ascii	"unsigned int\000"
 560      676E6564 
 560      20696E74 
 560      00
 561              	.LASF19:
 562 0022 6D61696E 		.ascii	"main.c\000"
 562      2E6300
 563              	.LASF21:
 564 0029 6D61696E 		.ascii	"main\000"
 564      00
 565              	.LASF15:
 566 002e 73746174 		.ascii	"status\000"
 566      757300
 567              	.LASF9:
 568 0035 75696E74 		.ascii	"uint8\000"
 568      3800
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 14


 569              	.LASF5:
 570 003b 6C6F6E67 		.ascii	"long unsigned int\000"
 570      20756E73 
 570      69676E65 
 570      6420696E 
 570      7400
 571              	.LASF7:
 572 004d 6C6F6E67 		.ascii	"long long unsigned int\000"
 572      206C6F6E 
 572      6720756E 
 572      7369676E 
 572      65642069 
 573              	.LASF20:
 574 0064 433A5C55 		.ascii	"C:\\Users\\mm1005301\\Documents\\PSoC Creator\\SCB_"
 574      73657273 
 574      5C6D6D31 
 574      30303533 
 574      30315C44 
 575 0092 49326343 		.ascii	"I2cCommSlave01\\SCB_I2cCommSlave01.cydsn\000"
 575      6F6D6D53 
 575      6C617665 
 575      30315C53 
 575      43425F49 
 576              	.LASF17:
 577 00ba 69326357 		.ascii	"i2cWriteBuffer\000"
 577      72697465 
 577      42756666 
 577      657200
 578              	.LASF18:
 579 00c9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 579      4320342E 
 579      392E3320 
 579      32303135 
 579      30333033 
 580 00fc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 580      20726576 
 580      6973696F 
 580      6E203232 
 580      31323230 
 581 012f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 581      66756E63 
 581      74696F6E 
 581      2D736563 
 581      74696F6E 
 582              	.LASF1:
 583 0157 756E7369 		.ascii	"unsigned char\000"
 583      676E6564 
 583      20636861 
 583      7200
 584              	.LASF13:
 585 0165 63686172 		.ascii	"char\000"
 585      00
 586              	.LASF22:
 587 016a 45786563 		.ascii	"ExecuteCommand\000"
 587      75746543 
 587      6F6D6D61 
 587      6E6400
ARM GAS  C:\Users\MM1005~1\AppData\Local\Temp\ccPPYeo9.s 			page 15


 588              	.LASF4:
 589 0179 6C6F6E67 		.ascii	"long int\000"
 589      20696E74 
 589      00
 590              	.LASF12:
 591 0182 646F7562 		.ascii	"double\000"
 591      6C6500
 592              	.LASF3:
 593 0189 73686F72 		.ascii	"short unsigned int\000"
 593      7420756E 
 593      7369676E 
 593      65642069 
 593      6E7400
 594              	.LASF0:
 595 019c 7369676E 		.ascii	"signed char\000"
 595      65642063 
 595      68617200 
 596              	.LASF11:
 597 01a8 666C6F61 		.ascii	"float\000"
 597      7400
 598              	.LASF2:
 599 01ae 73686F72 		.ascii	"short int\000"
 599      7420696E 
 599      7400
 600              	.LASF16:
 601 01b8 69326352 		.ascii	"i2cReadBuffer\000"
 601      65616442 
 601      75666665 
 601      7200
 602              	.LASF14:
 603 01c6 73697A65 		.ascii	"sizetype\000"
 603      74797065 
 603      00
 604              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
