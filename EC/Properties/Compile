# -*- sh -*-
# This is an Electric Commander script which is mostly like Shell but allows
# certain non-Shell constructs like $[buildDir].

set -x

cd $[buildDir]
CastleToolsDir=/home/epd/srcref/CastleTools
export PATH=$CastleToolsDir/bin:/tools/klocwork/user/bin:/tools/klocwork/server/bin:$PATH

if [ "$[/javascript myJob.Klocwork]" = "true" ]; then
    KWINJECT="kwinject -I 'testCCompiler.c,testCXXCompiler.cxx'"
fi

export DONT_UPDATE_CASTLETOOLS=1
export GENERATE_HSP_SIGNATURES=1
eval $KWINJECT make jobs=8 deploy || exit
MinimalFSFullVersion=$(components get RivieraMinimalFS-qc8017_32 selected_version) || exit
MinimalFSVersion=${MinimalFSFullVersion##*/}

if [ "$[BuildType]" = "Release" -o "$[/javascript myJob.CreateProfileEntry]" = "true" ]; then
    # Get the version number for the recovery partition
    ar x builds/Release/recovery.ipk data.tar.gz
    recoveryVersion=$(tar -Oxf data.tar.gz ./Bose_minimal.tar.gz | tar -Ozxf - Bose/etc/BoseVersion.json | jq -r '.short + "-" + .build_number + "+" + .abbrev_commit')
    rm -f data.tar.gz

    git clone git@github.com:BoseCorp/iot-profile-creator
    set +x
    iot-profile-creator/update_all_environments.sh $(echo $[ProjectName] | tr '[A-Z]' '[a-z]') $[Version] $(ectool getFullCredential IoT-Profile-Password --value password) $recoveryVersion 
    if [ "$[ProjectName]" = "Professor" ]; then
        # Need to create an additional entry for Ginger-Cheevers
        iot-profile-creator/update_all_environments.sh ginger-cheevers $[Version] $(ectool getFullCredential IoT-Profile-Password --value password) $recoveryVersion
    fi
fi

: success
