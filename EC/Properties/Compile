# -*- sh -*-
# This is an Electric Commander script which is mostly like Shell but allows
# certain non-Shell constructs like $[buildDir].

set -x

cd $[buildDir]
CastleToolsDir=/home/epd/srcref/CastleTools
export PATH=$CastleToolsDir/bin:/tools/klocwork/user/bin:/tools/klocwork/server/bin:$PATH

# Add RestoreVersion as additional property for this build
MinimalFSFullVersion=$(components get RivieraMinimalFS-qc8017_32 selected_version) || exit
MinimalFSVersion=${MinimalFSFullVersion##*/} || exit
ectool setProperty /myJob/RestoreVersion "$MinimalFSVersion" || exit


if [ "$[/javascript myJob.Klocwork]" = "true" ]; then
    KWINJECT="kwinject -I 'testCCompiler.c,testCXXCompiler.cxx' --ignore-files */proto/*"
fi

export DONT_UPDATE_CASTLETOOLS=1
export GENERATE_HSP_SIGNATURES=1
eval $KWINJECT make jobs=8 deploy disableGVA=$[DisableGVA] || exit
make sdk=x86_64 cfg=Debug jobs=8 || exit

set +x
if [ "$[BuildType]" = "Release" -o "$[/javascript myJob.CreateProfileEntry]" = "true" ]; then
    git clone git@github.com:BoseCorp/iot-profile-creator
    set +x
    iot-profile-creator/update_all_environments.sh professor       $[Version] $(ectool getFullCredential IoT-Profile-Password --value password) $MinimalFSVersion
    iot-profile-creator/update_all_environments.sh ginger-cheevers $[Version] $(ectool getFullCredential IoT-Profile-Password --value password) $MinimalFSVersion
fi

: success
